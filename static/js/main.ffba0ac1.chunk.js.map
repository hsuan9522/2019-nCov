{"version":3,"sources":["components/Info/globalStatic.js","components/Info/index.js","components/Country/index.js","components/globalIncrease.js","components/State/eachRegion.js","components/State/region.js","components/State/index.js","components/Slide/slideBtn.js","components/Slide/infoBtn.js","components/Slide/mapBtn.js","components/Slide/slideMenu.js","components/Slide/map.js","components/Slide/index.js","App.js","action/index.js","store/index.js","reducer/index.js","index.js"],"names":["globalStatic","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","react_default","a","createElement","row","type","justify","className","col","span","statistic","title","value","confirmedCount","curedCount","deadCount","offset","style","marginTop","textAlign","dayjs","updateTime","format","React","Component","Info","antIcon","icon","fontSize","spin","totalData","useSelector","_useState","useState","_useState2","slicedToArray","virusInfo","setVirusInfo","useEffect","axios","get","then","res","results","note","_","isEmpty","i","push","concat","catch","err","console","log","globalStatic_globalStatic","length","list","size","header","bordered","dataSource","renderItem","item","Item","key","tify","indicator","CountryChart","countryInfected","countryName","countryInfo","mapTitle","Confirmed","Recovered","Deaths","keys","colors","height","filter","el","nivo_bar_esm","layout","indexBy","margin","top","right","bottom","left","padding","axisLeft","v","find","zh","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","labelSkipWidth","labelSkipHeight","enableLabel","tooltip","_ref","id","axisTop","_ref2","display","justifyContent","map","backgroundColor","RangePicker","DatePicker","GlobalIncrease","chartData","setChartData","_useState3","_useState4","tmpChartData","setTmpChartData","_useState5","_useState6","everydayCount","setEverydayCount","_useState7","_useState8","everydayTotal","setEverydayTotal","makeChartData","data1","data2","cumData","forEach","includes","parseInt","tmp_T","d","Date","mm","getUTCFullYear","getUTCMonth","toString","dd","split","x","y","tmp_C","tmpCount","onChange","date","dateString","chart","range","findIndex","e","slice","dateOnChange","disabledDate","current","valueOf","add","nivo_line_esm","xScale","yScale","axisRight","replace","orient","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","useMesh","enableSlices","EachRegion","mapType","country","sort","b","index","label","scheme","Region","setData","chartSwitch","setChartSwitch","clickData","setClickData","regionTitle","Asia","Europe","Other","Americas","Oceania","Africa","nivoColor","tmp","region","confirmedDetail","recoveredDetail","deathsDetail","textDecoration","color","cursor","onClick","eachRegion","marginBottom","nivo_pie_esm","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","modifiers","enableRadialLabels","slicesLabelsSkipAngle","motionStiffness","motionDamping","event","handleClick","background","State","dataRegion","setDataRegion","info","Country_Region","assign","subregion","flag","dataByRegion","values","reduce","acc","re","State_region","SlideBtn","InfoBtn","MapBtn","SlideMenu","OBJECTID","code","Map","infected","alpha3Code","nivo_geo_esm","features","mapFeature","domain","unknownColor","valueFormat","projectionType","projectionScale","projectionRotation","enableGraticule","graticuleLineColor","legends","anchor","direction","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","Slide","openMenu","setOpenMenu","openMap","setOpenMap","components_Slide_map","slideMenu","slideBtn","mapBtn","infoBtn","Modal","content","onOk","Footer","Layout","Content","App","dispatch","useDispatch","asyncToGenerator","regenerator_default","mark","_callee","tmpTotal","tmpData","wrap","_context","prev","next","sent","attributes","Last_Update","t0","stop","_x","apply","arguments","_callee2","_context2","zhCountryName","detail","alpha2Code","_x2","components_Slide","components_Info","components_State","Country","components_globalIncrease","href","initState","reducer","undefined","action","objectSpread2","composeEnhancer","compose","applyMiddleware","thunk","window","devToolsExtension","f","store","createStore","rootElement","document","getElementById","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.ffba0ac1.chunk.js","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Statistic, Row, Col } from \"antd\";\n\nexport default class globalStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data = this.props.data;\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"space-between\" className=\"text-align-center\">\n          <Col span={8}>\n            <Statistic title=\"確診人數\" value={data.confirmedCount} />\n          </Col>\n          <Col span={8}>\n            <Statistic title=\"治癒人數\" value={data.curedCount} />\n          </Col>\n          <Col span={8}>\n            <Statistic title=\"死亡人數\" value={data.deadCount} />\n          </Col>\n          <Col span={8} offset={16}>\n            <div\n              className=\"update-time\"\n              style={{ marginTop: \"10px\", textAlign: \"center\" }}\n            >\n              更新時間：{dayjs(data.updateTime).format(\"YYYY/MM/DD HH:MM\")}\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\nimport _ from \"loadsh\";\nimport { List, Spin, Icon } from \"antd\";\nimport { tify } from \"chinese-conv\";\n\nimport GlobalStatic from \"./globalStatic\";\n\nimport \"./globalInfo.scss\";\n\nconst Info = () => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const totalData = useSelector(state => state.totalData);\n  const [virusInfo, setVirusInfo] = useState([]);\n\n  const getVirusInfo = () =>{\n    axios\n      .get(\"https://lab.isaaclin.cn/nCoV/api/overall\")\n      .then(res => {\n        const data = res.data.results[0];\n        let note = [];\n        if (!_.isEmpty(data)) {\n          for (let i = 0; i < 3; i++) {\n            note.push(data[`remark${i + 1}`]);\n          }\n          for (let i = 0; i < 3; i++) {\n            note.push(data[`note${i + 1}`]);\n          }\n        }\n        setVirusInfo(note);\n      })\n      .catch(err => console.log(\"info err\"));\n  }\n\n  useEffect(()=>{\n    getVirusInfo();\n  },[])\n\n  return (\n    <div>\n      <GlobalStatic data={totalData} />\n      {virusInfo.length > 0 ? (\n        <List\n          style={{ marginTop: \"10px\" }}\n          size=\"small\"\n          header={<div>Note</div>}\n          bordered\n          dataSource={virusInfo}\n          renderItem={(item, i) => (\n            <List.Item key={i}>{tify(item)}</List.Item>\n          )}\n        />\n      ) : (\n          <div className=\"loading\">\n            <Spin indicator={antIcon} />\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst CountryChart = props => {\n  const data = useSelector(state => state.countryInfected);\n  const countryName = useSelector(state => state.countryInfo);\n  if(!data || !countryName) return (<div>There is no Data!</div>)\n  const limit = 5000;\n  const mapTitle = {\n    Confirmed: \"確診人數\",\n    Recovered: \"治癒人數\",\n    Deaths: \"死亡人數\"\n  };\n  const keys = [\"Confirmed\", \"Recovered\", \"Deaths\"];\n  const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n  const eachHeight = 18.3;\n  return (\n      <div>\n        <h3 className=\"h3-title\">各國人數狀態</h3>\n        <div style={{ height: data.filter(el => el.Confirmed < limit).length*eachHeight }}>\n          <ResponsiveBar\n            layout=\"horizontal\"\n            data={data.filter(el => el.Confirmed < limit)}\n            keys={keys}\n            indexBy=\"Country_Region\"\n            margin={{ top: 5, right: 10, bottom: 50, left: 75 }}\n            padding={0.3}\n            colors={colors}\n            axisLeft={{\n              format: v =>\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\n            }}\n            axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"人數\",\n              legendPosition: \"middle\",\n              legendOffset: 40\n            }}\n            animate={true}\n            labelSkipWidth={16}\n            labelSkipHeight={16}\n            enableLabel={false}\n            tooltip={({ id, value }) => (\n              <span>\n                {mapTitle[id]}: {value}\n              </span>\n            )}\n          />\n        </div>\n        <div style={{ height: data.filter(el => el.Confirmed >= limit).length*eachHeight }}>\n          <ResponsiveBar\n            layout=\"horizontal\"\n            data={data.filter(el => el.Confirmed >= limit)}\n            keys={keys}\n            indexBy=\"Country_Region\"\n            margin={{ top: 5, right: 10, bottom: 50, left: 75 }}\n            padding={0.3}\n            colors={colors}\n            axisTop={null}\n            axisLeft={{\n              format: v =>\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\n            }}\n            axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"人數\",\n              legendPosition: \"middle\",\n              legendOffset: 40\n            }}\n            animate={true}\n            labelSkipWidth={16}\n            labelSkipHeight={16}\n            enableLabel={false}\n            tooltip={({ id, value }) => (\n              <span>\n                {mapTitle[id]}: {value}\n              </span>\n            )}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {keys.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div className=\"legend\" style={{ backgroundColor: colors[i] }} />\n              <span>{mapTitle[el]}</span>\n            </div>\n          ))}\n        </div>\n        <div style={{ textAlign: \"right\" }}>\n          <small>*各國疫情人數持續增加，因此有些國家增加數量過大，會導致較少感染人數的國家圖表顯示不出來。</small>\n          <small>另外分為上下部份，下部分為確診人數超過5000人次。</small>\n        </div>\n      </div>\n  )\n}\n\nexport default CountryChart;","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { DatePicker, Spin, Icon } from \"antd\";\nimport \"./globalIncrease.scss\";\nimport dayjs from \"dayjs\";\n\n\nconst { RangePicker } = DatePicker;\n\nconst GlobalIncrease = () => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const [chartData, setChartData] = useState([]);\n  const [tmpChartData, setTmpChartData] = useState([]);\n  const [everydayCount, setEverydayCount] = useState([]);\n  const [everydayTotal, setEverydayTotal] = useState([]);\n  const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n\n  useEffect(() => {\n    axios.get('https://w5q6k.sse.codesandbox.io/api/v1/cumulative')\n      .then(res => {\n        let cumData = {}\n        let filter = [\"Province/State\", \"Country/Region\", \"Lat\", \"Long\"]\n        // console.log(res.data)\n        res.data.forEach(el=>{\n          for(let i in el){\n            if (filter.includes(i)) continue;\n            cumData[i] = cumData[i] + parseInt(el[i]) || 0;\n          }\n        })\n\n        let tmp_T = []\n        for(let i in cumData){\n          const d = new Date(i);\n          const yy = d.getUTCFullYear()\n          let mm = d.getUTCMonth()+1;\n          mm = mm.toString().length==1 ? '0'+ mm : mm;\n          let dd = i.split('/')[1]\n          dd = dd.toString().length==1 ? '0'+ dd : dd;\n          tmp_T.push({\n            x: dayjs(i).format('YYYY/MM/DD'),\n            y: cumData[i]\n          })\n        }\n       \n        setEverydayTotal(tmp_T);\n        let tmp_C = tmp_T.map((el, i) => {\n          let tmpCount = el.y;\n          if (i !== 0) {\n            tmpCount -= tmp_T[i - 1].y;\n          }\n          return {\n            x: el.x,\n            y: tmpCount\n          };\n        });\n        setEverydayCount(tmp_C)\n      })\n  }, [])\n\n  useEffect(()=>{\n    makeChartData();\n  }, [everydayCount, everydayTotal])\n\n  function makeChartData(data1, data2) {\n    const data = [\n      {\n        id: \"每日確診人數\",\n        data: data1 || everydayCount\n      },\n      {\n        id: \"累積總數\",\n        data: data2 || everydayTotal\n      }\n    ];\n    setChartData(data);\n\n    if (!data1 && !data2) {\n      setTmpChartData(data);\n    } \n  }\n\n  function disableDate(current) {\n    return (\n      current &&\n      (current.valueOf() > dayjs(everydayCount[everydayCount.length - 1].x).add(1,'day') ||\n        current.valueOf() < new Date(\"2020/01/20\"))\n    );\n  }\n\n  function dateOnChange(date, chart) {\n    if (date[0] === \"\" && date[1] === \"\") {\n      makeChartData();\n    } else {\n      let range = [];\n      date.forEach((el, i) => {\n        range[i] = chart[0].data.findIndex(e => e.x === el);\n      });\n      const count = chart[0].data.slice(range[0], range[1] + 1);\n      const total = chart[1].data.slice(range[0], range[1] + 1);\n      makeChartData(count, total);\n    }\n  }\n  if (everydayCount.length == 0 || everydayTotal.length==0){\n    return (\n      <div>\n        <h3 className=\"h3-title\">每日/累積確診人數</h3>\n        <div className=\"loading\">\n          <Spin indicator={antIcon} />\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div style={{ height: \"500px\" }}>\n        <h3 className=\"h3-title\">每日/累積確診人數</h3>\n        <div className=\"date-range\">\n          <span>查詢區間：</span>\n          <RangePicker\n            onChange={(date, dateString) =>\n              dateOnChange(dateString, tmpChartData)\n            }\n            disabledDate={disableDate}\n            format=\"YYYY/MM/DD\"\n          />\n        </div>\n\n        <ResponsiveLine\n          data={chartData}\n          margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\n          xScale={{ type: \"point\" }}\n          yScale={{ type: \"linear\" }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\n            tickRotation: -45\n          }}\n          axisLeft={{\n            orient: \"left\",\n            tickRotation: 0,\n            legend: \"人數\",\n            legendOffset: -60,\n            legendPosition: \"middle\"\n          }}\n          colors={colors}\n          pointSize={10}\n          pointColor={{ theme: \"background\" }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: \"serieColor\" }}\n          useMesh={true}\n          enableSlices=\"x\"\n        />\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {chartData.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div\n                className=\"legend\"\n                style={{ backgroundColor: colors[i] }}\n              />\n              <span>{el.id}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GlobalIncrease;\n//舊的api用，因為已經不更新了所以註解掉\n// export default class GlobalIncrease extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       everydayTotal: [], //累積總數\n//       everydayCount: [], //每日人數\n//       chartData: [],\n//       tmpChartData: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     axios\n//       .get(\n//         \"https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/cases_time_v3/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Report_Date_String%20asc&resultOffset=0&resultRecordCount=2000&cacheHint=true\"\n//       )\n//       .then(res => {\n//         const everydayTotal = res.data.features.map(el => {\n//           return {\n//             x: el.attributes.Report_Date_String,\n//             y: el.attributes.Total_Confirmed\n//           };\n//         });\n//         const everydayCount = everydayTotal.map((el, i) => {\n//           let tmpCount = el.y;\n//           if (i !== 0) {\n//             tmpCount -= everydayTotal[i - 1].y;\n//           }\n//           return {\n//             x: el.x,\n//             y: tmpCount\n//           };\n//         });\n//         this.setState({\n//           everydayTotal: everydayTotal,\n//           everydayCount: everydayCount\n//         });\n//         this.makeChartData();\n//         this.setState({ tmpChartData: this.state.chartData });\n//       });\n//   }\n//   makeChartData(data1, data2) {\n//     const data = [\n//       {\n//         id: \"每日確診人數\",\n//         data: data1 || this.state.everydayCount\n//       },\n//       {\n//         id: \"累積總數\",\n//         data: data2 || this.state.everydayTotal\n//       }\n//     ];\n//     this.setState({ chartData: data });\n//   }\n\n//   dateOnChange(date, chart) {\n//     if (date[0] === \"\" && date[1] === \"\") {\n//       this.makeChartData();\n//     } else {\n//       let range = [];\n//       date.forEach((el, i) => {\n//         range[i] = chart[0].data.findIndex(e => e.x === el);\n//       });\n//       const count = chart[0].data.slice(range[0], range[1] + 1);\n//       const total = chart[1].data.slice(range[0], range[1] + 1);\n//       this.makeChartData(count, total);\n//     }\n//   }\n\n//   disableDate(current) {\n//     return (\n//       current &&\n//       (current.valueOf() > Date.now() ||\n//         current.valueOf() < new Date(\"2020/01/20\"))\n//     );\n//   }\n\n//   render() {\n//     const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n\n//     return (\n//       <div>\n//         <div style={{ height: \"500px\" }}>\n//           <h3 className=\"h3-title\">每日/累積確診人數</h3>\n//           <div className=\"date-range\">\n//             <span>查詢區間：</span>\n//             <RangePicker\n//               onChange={(date, dateString) =>\n//                 this.dateOnChange(dateString, this.state.tmpChartData)\n//               }\n//               disabledDate={this.disableDate}\n//               format=\"YYYY/MM/DD\"\n//             />\n//           </div>\n\n//           <ResponsiveLine\n//             data={this.state.chartData}\n//             margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\n//             xScale={{ type: \"point\" }}\n//             yScale={{ type: \"linear\" }}\n//             axisTop={null}\n//             axisRight={null}\n//             axisBottom={{\n//               format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\n//               tickRotation: -45\n//             }}\n//             axisLeft={{\n//               orient: \"left\",\n//               tickRotation: 0,\n//               legend: \"人數\",\n//               legendOffset: -60,\n//               legendPosition: \"middle\"\n//             }}\n//             colors={colors}\n//             pointSize={10}\n//             pointColor={{ theme: \"background\" }}\n//             pointBorderWidth={2}\n//             pointBorderColor={{ from: \"serieColor\" }}\n//             useMesh={true}\n//             enableSlices=\"x\"\n//           />\n//           <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n//             {this.state.chartData.map((el, i) => (\n//               <div key={i} className=\"legend-wrapper\">\n//                 <div\n//                   className=\"legend\"\n//                   style={{ backgroundColor: colors[i] }}\n//                 />\n//                 <span>{el.id}</span>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst EachRegion = (props) => {\n  const mapType = [\"Confirmed\", \"Recovered\", \"Deaths\"];\n  const mapTitle = {\n    Confirmed: \"確診人數\",\n    Recovered: \"治癒人數\",\n    Deaths: \"死亡人數\"\n  }\n  props.data.country.sort((a, b) => b[mapType[props.data.index]] - a[mapType[props.data.index]])\n  \n  return (\n    <div>\n      <h3 style={{textAlign: \"center\"}}>{props.data.label}<br/>{mapTitle[mapType[props.data.index]]}</h3>\n      <div style={{ height: \"500px\", display: \"flex\" }}>\n        <ResponsiveBar\n          data={props.data.country}\n          keys={[mapType[props.data.index]]}\n          indexBy=\"Country_Region\"\n          margin={{ top: 15, right: 10, bottom: 70, left: 65 }}\n          padding={props.data.country.length> 20 ?0.3 :0.7}\n          colors={{ scheme: \"nivo\"}}\n          axisBottom={{\n            format: v => `${(props.data.country.find(el => el.key === v) || {}).zh || v}`,\n            tickRotation: -40\n          }}\n          axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            legend: \"人數\",\n            legendPosition: \"start\",\n            legendOffset: -55\n          }}\n          animate={true}\n          labelSkipWidth={16}\n          labelSkipHeight={16}\n          enableLabel={false}\n          tooltip={({ id, value }) => (\n            <span>\n              {value}\n            </span>\n          )}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EachRegion;","import React, { useEffect, useState } from 'react';\nimport { ResponsivePie } from '@nivo/pie'\nimport './region.scss';\n\nimport EachRegion from \"./eachRegion\"\n\nconst Region = (props) => {\n  const [data, setData] = useState([]);\n  const [chartSwitch, setChartSwitch] = useState(false);\n  const [clickData, setClickData] = useState(null);\n\n  const mapTitle = [\"確診人數\", \"治癒人數\", \"死亡人數\"];\n  const regionTitle = {\n    Asia: \"亞洲\",\n    Europe: \"歐洲\",\n    Other: \"其他\",\n    Americas: \"美洲\",\n    Oceania: \"大洋洲\",\n    Africa: \"非洲\"\n  }\n  const nivoColor = [\"rgb(232, 193, 160)\", \"rgb(244, 117, 96)\", \"rgb(241, 225, 91)\", \"rgb(232, 168, 56)\", \"rgb(97, 205, 187)\", \"rgb(151, 227, 213)\"]\n\n  useEffect(() => {\n    let tmp = [[], [], []]\n    props.data.forEach(el => {\n      tmp[0].push({ id: el.region, value: el.Confirmed, label: regionTitle[el.region], country: el. confirmedDetail });\n      tmp[1].push({ id: el.region, value: el.Recovered, label: regionTitle[el.region], country: el.recoveredDetail });\n      tmp[2].push({ id: el.region, value: el.Deaths, label: regionTitle[el.region], country: el.deathsDetail });\n    })\n    setData(tmp);\n  }, [props.data])\n\n  function handleClick(data, i) {\n    if(data.value==0) return false;\n    setChartSwitch(true);\n    data.index = i;\n    setClickData(data);\n  }\n\n  return (\n    <div>\n      {!chartSwitch ?\n        <div>\n          <h3 className=\"h3-title\" style={{marginBottom: \"20px\"}}>五大洲圓餅圖</h3>\n          <div className=\"pie-wrapper\">\n            {!chartSwitch &&\n              data.map((el, index) => {\n                return (\n                  <div className=\"pie\" key={index}>\n                    <h3 className=\"title\">{mapTitle[index]}</h3>\n                    <ResponsivePie\n                      data={el}\n                      margin={{ top: 5, right: 10, bottom: 60, left: 10 }}\n                      innerRadius={0.3}\n                      padAngle={3}\n                      cornerRadius={2}\n                      colors={nivoColor}\n                      borderWidth={1}\n                      borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                      enableRadialLabels={false}\n                      slicesLabelsSkipAngle={10}\n                      motionStiffness={90}\n                      motionDamping={15}\n                      tooltip={function (e) { return <div >{e.label} : {e.value}</div> }}\n                      onClick={(data, event) => handleClick(data,index)}\n                    />\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n            {data.length != 0 &&\n              data[0].map((el, index) => {\n                return (\n                  <div key={index} className=\"pie-labels-wrapper\">\n                    <span className=\"pie-labels\" style={{ background: nivoColor[index] }}></span>\n                    {el.label}\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div> :\n        <div>\n          <div style={{ textDecoration: \"underline\", color: \"cornflowerblue\", cursor: \"pointer\"}} onClick={() => { setChartSwitch(false); setClickData(null) }}>返回</div>\n          <EachRegion data={clickData}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Region;","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\"\n\nimport Region from \"./region\"\n\nconst State = () => {\n  const countryInfected = useSelector(state=>state.countryInfected);\n  const countryName = useSelector(state => state.countryInfo);\n  const [dataRegion, setDataRegion] = useState([])\n\n  useEffect(()=>{\n    if(!countryName || !countryInfected) return ()=>{};\n    const data = countryInfected.map(el=>{\n      let info = countryName.find(e=>e.key === el.Country_Region );\n      if(info){\n        return Object.assign(el,info);\n      }else{\n        el.region = 'Other';\n        el.subregion = 'Other';\n        el.flag = null;\n        return el;\n      }\n    })\n    const dataByRegion = Object.values(data.reduce((acc, re)=>{\n      if(acc[re.region]){\n        acc[re.region]['Confirmed'] += re.Confirmed;\n        acc[re.region]['confirmedDetail'].push(re)\n        acc[re.region]['Deaths'] += re.Deaths;\n        acc[re.region]['deathsDetail'].push(re)\n        acc[re.region]['Recovered'] += re.Recovered;\n        acc[re.region]['recoveredDetail'].push(re)\n      }else{\n        acc[re.region] = {\n          region: re.region,\n          Confirmed: re.Confirmed,\n          Deaths: re.Deaths,\n          Recovered: re.Recovered,\n          confirmedDetail: [],\n          deathsDetail:[],\n          recoveredDetail: []\n        };\n        acc[re.region].confirmedDetail.push(re);\n        acc[re.region].deathsDetail.push(re);\n        acc[re.region].recoveredDetail.push(re);\n      }\n      return acc;\n    },{}))\n    setDataRegion(dataByRegion);\n  }, [countryInfected, countryName])\n\n  return (\n    <div style={{marginTop: \"30px\"}}>\n      {dataRegion &&\n        <Region data={dataRegion} />\n      }\n    </div>\n  )\n}\n\nexport default State;","import React from \"react\";\nimport { Icon } from \"antd\";\n\nconst SlideBtn = (props)=>{\n  return (\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\n      <Icon type=\"project\" theme=\"filled\" />\n    </div>\n  ); \n}\nexport default SlideBtn;\n\n","import React from 'react';\nimport { Icon } from \"antd\";\n\nconst InfoBtn = props =>{\n  return (\n    <div className=\"slide-btn\" onClick={()=> props.onClick()}>\n      <Icon type=\"info\"/>\n    </div>\n    )\n}\n\nexport default InfoBtn;","import React from 'react';\nimport { Icon } from \"antd\";\n\nconst MapBtn = props => {\n  return (\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\n      <Icon type=\"global\" />\n    </div>\n  )\n}\n\nexport default MapBtn;","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Row, Col } from \"antd\";\n\nconst SlideMenu = ()=>{\n  const countryInfected = useSelector(state => state.countryInfected);\n\n  return (\n    <div className=\"slide-menu\">\n      <h3>數據表</h3>\n      <Row className=\"row-title\" type=\"flex\" justify=\"space-between\">\n        <Col span={6}>國家</Col>\n        <Col className=\"col\" span={4}>\n          確診\n          </Col>\n        <Col className=\"col\" span={4}>\n          治癒\n          </Col>\n        <Col className=\"col\" span={4}>\n          死亡\n          </Col>\n      </Row>\n      {countryInfected.map(el => {\n        return (\n          <Row\n            className=\"row\"\n            key={el.OBJECTID}\n            type=\"flex\"\n            justify=\"space-between\"\n            style={el.code==='TW' ? {color: \"darkred\"}: {}}\n          >\n            <Col span={6}>\n              {el.zh || el.Country_Region }\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Confirmed}\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Recovered}\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Deaths}\n            </Col>\n          </Row>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default SlideMenu;\n","import React, {useEffect, useState} from \"react\";\nimport { useSelector } from \"react-redux\"\nimport { ResponsiveChoropleth } from '@nivo/geo'\n\nimport mapFeature from \"../../config/map.json\"\n\nimport './map.scss';\n\nconst Map = (props)=> {\n  const infected = useSelector(state=>state.countryInfected);\n  const [data, setData] = useState([]);\n  const colors = [\"rgb(215, 100, 69)\", \"#F36A62\", \"rgb(232, 193, 160)\",\"#EBDFCF\", \"rgb(151, 227, 213)\", \"rgb(0, 176, 167)\"];\n\n  useEffect(()=>{\n    const tmp = infected.map(el=>{\n      return {\n        id: el.alpha3Code,\n        value: el.Confirmed,\n        zh: el.zh\n      }\n    })\n    setData(tmp);\n  }, [infected])\n  return (\n    <div className=\"map-wrapper\">\n      <div className=\"close-btn\" onClick={()=>props.onClick()}>Close</div>\n      {/* <h3 className=\"h3-title\">確診人數世界地圖</h3> */}\n      <ResponsiveChoropleth\n        data={data}\n        features={mapFeature.features}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        colors=\"nivo\"\n        domain={[0, 90000]}\n        unknownColor=\"#c7c7c7\"\n        label=\"data.zh\"\n        valueFormat=\",.0f\"\n        projectionType=\"equirectangular\"\n        projectionScale={155}\n        projectionRotation={[0, 0, 0]}\n        enableGraticule={true}\n        graticuleLineColor=\"#dddddd\"\n        borderWidth={0.5}\n        borderColor=\"#152538\"\n        legends={[\n          {\n            anchor: 'bottom-left',\n            direction: 'column',\n            justify: true,\n            translateX: 200,\n            translateY: -120,\n            itemsSpacing: 0,\n            itemWidth: 110,\n            itemHeight: 18,\n            itemDirection: 'left-to-right',\n            itemTextColor: '#ffffff',\n            itemOpacity: 0.95,\n            symbolSize: 18,\n          }\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default Map;","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport SlideBtn from \"./slideBtn\";\nimport InfoBtn from \"./infoBtn\";\nimport MapBtn from \"./mapBtn\";\nimport SlideMenu from \"./slideMenu\";\nimport Map from \"./map\";\nimport \"./slide.scss\";\n\nconst Slide = () => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const [openMap, setOpenMap] = useState(false);\n\n  function InfoModal() {\n    Modal.info({\n      title: \"About This Website\",\n      content: (\n        <div>\n          <p>這是一個react的練習專案，API是從下方的資料來源所寫的網站內找出來的，我不確定這樣的合法性，但我僅是練習，並無任何商業用途。</p>\n        </div>\n      ),\n      onOk() { },\n    })\n  }\n\n  return (\n    <div>\n      {openMap && <Map onClick={()=>setOpenMap(false)}/>}\n      <div className={\"slide-wrapper \" + (openMenu ? \"active\" : \"\")}>\n        {openMenu && <SlideMenu />}\n        <div>\n          <SlideBtn onClick={() => setOpenMenu(!openMenu)} />\n          <MapBtn onClick={()=> setOpenMap(!openMap)}/>\n          <InfoBtn onClick={InfoModal}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slide;\n\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Layout } from \"antd\";\nimport { useDispatch } from 'react-redux';\nimport { getCountryVirusData, getCountryInfo } from \"./action\"\n\nimport \"./styles.css\";\nimport \"antd/dist/antd.css\";\n\nimport Info from \"./components/Info\";\nimport Country from \"./components/Country\";\nimport GlobalIncrease from \"./components/globalIncrease\";\nimport State from \"./components/State\";\nimport Slide from \"./components/Slide/\";\nconst { Footer, Content } = Layout;\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() =>{\n    dispatch(getCountryVirusData())\n    dispatch(getCountryInfo())\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Content style={{ marginTop: \"20px\" }}>\n          <Slide />\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={21}>\n              <h2 className=\"text-align-center\">新型冠狀病毒 2019-nCoV</h2>\n              <Info />\n              <State />\n              <Country />\n              <GlobalIncrease />\n            </Col>\n          </Row>\n        </Content>\n        <Footer style={{ marginTop: \"100px\" }}>\n          <div style={{ textAlign: \"center\" }}>\n            資料來源：\n            <a href=\"https://github.com/BlankerL/DXY-2019-nCoV-Crawler\">\n              DXY-2019-nCoV-Crawler\n            </a>\n            / <a href=\"https://www.gisaid.org/\">GISAID</a>\n          </div>\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport zhCountryName from '../config/countryName.json';\n\nexport const getCountryVirusData = () => async dispatch => {\n  try {\n    const res = await axios.get('https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&outSR=102100&resultOffset=0&resultRecordCount=250&cacheHint=true')\n    let tmpTotal = {\n      confirmedCount: 0,\n      curedCount: 0,\n      deadCount: 0,\n      updateTime: 0\n    };\n    const tmpData = res.data.features.map(el => {\n      tmpTotal.confirmedCount += el.attributes.Confirmed;\n      tmpTotal.curedCount += el.attributes.Recovered;\n      tmpTotal.deadCount += el.attributes.Deaths;\n      tmpTotal.updateTime =\n        el.attributes.Last_Update > tmpTotal.updateTime\n          ? el.attributes.Last_Update\n          : tmpTotal.updateTime;\n      return el.attributes;\n    });\n    dispatch({\n      type: \"ADD_COUNTRY_INFECTED\",\n      data: tmpData\n    });\n    dispatch({\n      type: \"ADD_TOTAL_DATA\",\n      data: tmpTotal,\n    })\n  } catch (err) {\n    console.log(err)\n  }\n};\n\nexport const getCountryInfo = () => async dispatch => {\n  try {\n    const res = await axios.get('https://restcountries.eu/rest/v2/all');\n    const tmp = zhCountryName.map(el => {\n      let detail = res.data.find(e => e.alpha2Code === el.code);\n      if (detail) {\n        const { region, flag, subregion, alpha3Code } = detail;\n        return Object.assign(el, { region, flag, subregion, alpha3Code })\n      } else {\n        el.region = 'Other';\n        el.flag = null;\n        el.subregion = 'Other';\n        return el;\n      }\n    })\n    dispatch({\n      type: \"ADD_COUNTRY_INFO\",\n      data: tmp\n    })\n  } catch (err) {\n    console.log(err)\n  }\n}","const initState = {\n  countryInfected: null,\n  totalData: {},\n  countryInfo: null,\n};\n\nexport default initState;","import initState from '../store'\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_COUNTRY_INFECTED': {\n      return {\n        ...state,\n        countryInfected: action.data,\n      };\n    }\n    case 'ADD_TOTAL_DATA': {\n      return {\n        ...state,\n        totalData: action.data,\n      };\n    }\n    case 'ADD_COUNTRY_INFO': {\n      return {\n        ...state,\n        countryInfo: action.data,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from 'react-redux';\nimport { compose ,createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport reducer from './reducer';\nconst composeEnhancer = compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f);\n\nconst store = createStore(reducer, composeEnhancer);\n\nconst rootElement = document.getElementById(\"root\");\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, rootElement);\n"],"sourceRoot":""}
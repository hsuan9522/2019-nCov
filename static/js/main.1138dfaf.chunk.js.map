{"version":3,"sources":["components/Info/globalStatic.js","components/Info/index.js","components/Country/index.js","components/globalIncrease.js","components/State/eachRegion.js","components/State/region.js","components/State/index.js","components/Slide/slideBtn.js","components/Slide/infoBtn.js","components/Slide/mapBtn.js","components/Slide/slideMenu.js","components/Slide/map.js","components/Slide/index.js","App.js","action/index.js","store/index.js","reducer/index.js","index.js"],"names":["globalStatic","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","react_default","a","createElement","row","type","justify","className","col","span","statistic","title","value","confirmedCount","curedCount","deadCount","offset","style","marginTop","textAlign","dayjs","updateTime","format","React","Component","Info","antIcon","icon","fontSize","spin","totalData","useSelector","_useState","useState","_useState2","slicedToArray","virusInfo","setVirusInfo","useEffect","axios","get","then","res","results","note","_","isEmpty","i","push","concat","catch","err","console","log","globalStatic_globalStatic","length","list","size","header","bordered","dataSource","renderItem","item","Item","key","tify","indicator","CountryChart","countryInfected","countryName","countryInfo","mapTitle","Confirmed","Recovered","Deaths","keys","colors","height","filter","el","nivo_bar_esm","layout","indexBy","margin","top","right","bottom","left","padding","axisLeft","v","find","zh","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","labelSkipWidth","labelSkipHeight","enableLabel","tooltip","_ref","id","axisTop","_ref2","display","justifyContent","map","backgroundColor","RangePicker","DatePicker","GlobalIncrease","chartData","setChartData","_useState3","_useState4","chartData2","setChartData2","_useState5","_useState6","tmpChartData","setTmpChartData","_useState7","_useState8","everydayCount","setEverydayCount","_useState9","_useState10","everydayTotal","setEverydayTotal","makeChartData","data1","data2","data_c","data_all","cumData","forEach","includes","parseInt","tmp_T","d","Date","mm","getUTCFullYear","getUTCMonth","toString","dd","split","x","y","tmp_C","tmpCount","onChange","date","dateString","chart","range","findIndex","e","slice","dateOnChange","disabledDate","current","valueOf","add","nivo_line_esm","xScale","yScale","axisRight","replace","orient","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","useMesh","enableSlices","EachRegion","mapType","country","sort","b","index","label","scheme","Region","setData","chartSwitch","setChartSwitch","clickData","setClickData","regionTitle","Asia","Europe","Other","Americas","Oceania","Africa","nivoColor","tmp","region","confirmedDetail","recoveredDetail","deathsDetail","textDecoration","color","cursor","onClick","eachRegion","marginBottom","nivo_pie_esm","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","modifiers","enableRadialLabels","slicesLabelsSkipAngle","motionStiffness","motionDamping","event","handleClick","background","State","dataRegion","setDataRegion","info","Country_Region","assign","subregion","flag","dataByRegion","values","reduce","acc","re","State_region","SlideBtn","InfoBtn","MapBtn","SlideMenu","code","Map","infected","alpha3Code","nivo_geo_esm","features","mapFeature","domain","unknownColor","valueFormat","projectionType","projectionScale","projectionRotation","enableGraticule","graticuleLineColor","legends","anchor","direction","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","Slide","openMenu","setOpenMenu","openMap","setOpenMap","components_Slide_map","slideMenu","slideBtn","mapBtn","infoBtn","Modal","content","onOk","Footer","Layout","Content","App","dispatch","useDispatch","asyncToGenerator","regenerator_default","mark","_callee","tmpTotal","tmpData","wrap","_context","prev","next","sent","t0","stop","_x","apply","arguments","_callee2","_context2","zhCountryName","detail","alpha2Code","_x2","components_Slide","components_Info","components_State","Country","components_globalIncrease","href","initState","reducer","undefined","action","objectSpread2","composeEnhancer","compose","applyMiddleware","thunk","window","devToolsExtension","f","store","createStore","rootElement","document","getElementById","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.1138dfaf.chunk.js","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Statistic, Row, Col } from \"antd\";\n\nexport default class globalStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data = this.props.data;\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"space-between\" className=\"text-align-center\">\n          <Col span={8}>\n            <Statistic title=\"確診人數\" value={data.confirmedCount} />\n          </Col>\n          <Col span={8}>\n            <Statistic title=\"治癒人數\" value={data.curedCount} />\n          </Col>\n          <Col span={8}>\n            <Statistic title=\"死亡人數\" value={data.deadCount} />\n          </Col>\n          <Col span={8} offset={16}>\n            <div\n              className=\"update-time\"\n              style={{ marginTop: \"10px\", textAlign: \"center\" }}\n            >\n              更新時間：{dayjs(data.updateTime).format(\"YYYY/MM/DD HH:MM\")}\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\nimport _ from \"loadsh\";\nimport { List, Spin, Icon } from \"antd\";\nimport { tify } from \"chinese-conv\";\n\nimport GlobalStatic from \"./globalStatic\";\n\nimport \"./globalInfo.scss\";\n\nconst Info = () => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const totalData = useSelector(state => state.totalData);\n  const [virusInfo, setVirusInfo] = useState([]);\n\n  const getVirusInfo = () =>{\n    axios\n      .get(\"https://lab.isaaclin.cn/nCoV/api/overall\")\n      .then(res => {\n        const data = res.data.results[0];\n        let note = [];\n        if (!_.isEmpty(data)) {\n          for (let i = 0; i < 3; i++) {\n            note.push(data[`remark${i + 1}`]);\n          }\n          for (let i = 0; i < 3; i++) {\n            note.push(data[`note${i + 1}`]);\n          }\n        }\n        setVirusInfo(note);\n      })\n      .catch(err => console.log(\"info err\"));\n  }\n\n  useEffect(()=>{\n    getVirusInfo();\n  },[])\n\n  return (\n    <div>\n      <GlobalStatic data={totalData} />\n      {virusInfo.length > 0 ? (\n        <List\n          style={{ marginTop: \"10px\" }}\n          size=\"small\"\n          header={<div>Note</div>}\n          bordered\n          dataSource={virusInfo}\n          renderItem={(item, i) => (\n            <List.Item key={i}>{tify(item)}</List.Item>\n          )}\n        />\n      ) : (\n          <div className=\"loading\">\n            <Spin indicator={antIcon} />\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { Spin, Icon } from \"antd\";\n\nconst CountryChart = props => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const data = useSelector(state => state.countryInfected);\n  const countryName = useSelector(state => state.countryInfo);\n  if (!data || !countryName) return (<div className=\"loading\"><Spin indicator={antIcon} /></div>)\n  const limit = 5000;\n  const mapTitle = {\n    Confirmed: \"確診人數\",\n    Recovered: \"治癒人數\",\n    Deaths: \"死亡人數\"\n  };\n  const keys = [\"Confirmed\", \"Recovered\", \"Deaths\"];\n  const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n  const eachHeight = 18.3;\n  return (\n      <div>\n        <h3 className=\"h3-title\">各國人數狀態</h3>\n        <div style={{ height: data.filter(el => el.Confirmed < limit).length*eachHeight }}>\n          <ResponsiveBar\n            layout=\"horizontal\"\n            data={data.filter(el => el.Confirmed < limit)}\n            keys={keys}\n            indexBy=\"Country_Region\"\n            margin={{ top: 5, right: 10, bottom: 50, left: 75 }}\n            padding={0.3}\n            colors={colors}\n            axisLeft={{\n              format: v =>\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\n            }}\n            axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"人數\",\n              legendPosition: \"middle\",\n              legendOffset: 40\n            }}\n            animate={true}\n            labelSkipWidth={16}\n            labelSkipHeight={16}\n            enableLabel={false}\n            tooltip={({ id, value }) => (\n              <span>\n                {mapTitle[id]}: {value}\n              </span>\n            )}\n          />\n        </div>\n        <div style={{ height: data.filter(el => el.Confirmed >= limit).length*eachHeight }}>\n          <ResponsiveBar\n            layout=\"horizontal\"\n            data={data.filter(el => el.Confirmed >= limit)}\n            keys={keys}\n            indexBy=\"Country_Region\"\n            margin={{ top: 5, right: 10, bottom: 50, left: 75 }}\n            padding={0.3}\n            colors={colors}\n            axisTop={null}\n            axisLeft={{\n              format: v =>\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\n            }}\n            axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"人數\",\n              legendPosition: \"middle\",\n              legendOffset: 40\n            }}\n            animate={true}\n            labelSkipWidth={16}\n            labelSkipHeight={16}\n            enableLabel={false}\n            tooltip={({ id, value }) => (\n              <span>\n                {mapTitle[id]}: {value}\n              </span>\n            )}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {keys.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div className=\"legend\" style={{ backgroundColor: colors[i] }} />\n              <span>{mapTitle[el]}</span>\n            </div>\n          ))}\n        </div>\n        <div style={{ textAlign: \"right\" }}>\n          <small>*各國疫情人數持續增加，因此有些國家增加數量過大，會導致較少感染人數的國家圖表顯示不出來。</small>\n          <small>另外分為上下部份，下部分為確診人數超過5000人次。</small>\n        </div>\n      </div>\n  )\n}\n\nexport default CountryChart;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { DatePicker, Spin, Icon } from \"antd\";\nimport \"./globalIncrease.scss\";\nimport dayjs from \"dayjs\";\n\n\nconst { RangePicker } = DatePicker;\n\nconst GlobalIncrease = () => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const [chartData, setChartData] = useState([]);//每日\n  const [chartData2, setChartData2] = useState([]);//累積\n  const [tmpChartData, setTmpChartData] = useState([]);\n  const [everydayCount, setEverydayCount] = useState([]);\n  const [everydayTotal, setEverydayTotal] = useState([]);\n  const colors2 = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"]; //for 累積\n  const colors = [\"#7ECABC\", \"#E2C2A4\", , \"#E47C67\"];// for每日\n\n  useEffect(() => {\n    axios.get('https://w5q6k.sse.codesandbox.io/api/v1/cumulative')\n      .then(res => {\n        let cumData = {}\n        let filter = [\"Province/State\", \"Country/Region\", \"Lat\", \"Long\"]\n        // console.log(res.data)\n        res.data.forEach(el=>{\n          for(let i in el){\n            if (filter.includes(i)) continue;\n            cumData[i] = cumData[i] + parseInt(el[i]) || 0;\n          }\n        })\n\n        let tmp_T = []\n        for(let i in cumData){\n          const d = new Date(i);\n          const yy = d.getUTCFullYear()\n          let mm = d.getUTCMonth()+1;\n          mm = mm.toString().length==1 ? '0'+ mm : mm;\n          let dd = i.split('/')[1]\n          dd = dd.toString().length==1 ? '0'+ dd : dd;\n          tmp_T.push({\n            x: dayjs(i).format('YYYY/MM/DD'),\n            y: cumData[i]\n          })\n        }\n       \n        setEverydayTotal(tmp_T);\n        let tmp_C = tmp_T.map((el, i) => {\n          let tmpCount = el.y;\n          if (i !== 0) {\n            tmpCount -= tmp_T[i - 1].y;\n          }\n          return {\n            x: el.x,\n            y: tmpCount\n          };\n        });\n        setEverydayCount(tmp_C)\n      })\n  }, [])\n\n  useEffect(()=>{\n    makeChartData();\n  }, [everydayCount, everydayTotal])\n\n  function makeChartData(data1, data2) {\n    const data = [\n      {\n        id: \"每日確診人數\",\n        data: data1 || everydayCount\n      }\n    ];\n    const data_c = [\n      {\n        id: \"累積總數\",\n        data: data2 || everydayTotal\n      }\n    ];\n    const data_all = [\n      {\n        id: \"每日確診人數\",\n        data: data1 || everydayCount\n      },\n      {\n        id: \"累積總數\",\n        data: data2 || everydayTotal\n      }\n    ];\n    setChartData(data);\n    setChartData2(data_c);\n\n    if (!data1 && !data2) {\n      setTmpChartData(data_all);\n    } \n  }\n\n  function disableDate(current) {\n    return (\n      current &&\n      (current.valueOf() > dayjs(everydayCount[everydayCount.length - 1].x).add(1,'day') ||\n        current.valueOf() < new Date(\"2020/01/20\"))\n    );\n  }\n\n  function dateOnChange(date, chart) {\n    if (date[0] === \"\" && date[1] === \"\") {\n      makeChartData();\n    } else {\n      let range = [];\n      date.forEach((el, i) => {\n        range[i] = chart[0].data.findIndex(e => e.x === el);\n      });\n      const count = chart[0].data.slice(range[0], range[1] + 1);\n      const total = chart[1].data.slice(range[0], range[1] + 1);\n      makeChartData(count, total);\n    }\n  }\n  if (everydayCount.length == 0 || everydayTotal.length==0){\n    return (\n      <div>\n        <h3 className=\"h3-title\">每日/累積確診人數</h3>\n        <div className=\"loading\">\n          <Spin indicator={antIcon} />\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div style={{ height: \"500px\" }}>\n        <h3 className=\"h3-title\">每日確診人數</h3>\n        <div className=\"date-range\">\n          <span>查詢區間：</span>\n          <RangePicker\n            onChange={(date, dateString) =>\n              dateOnChange(dateString, tmpChartData)\n            }\n            disabledDate={disableDate}\n            format=\"YYYY/MM/DD\"\n          />\n        </div>\n\n        <ResponsiveLine\n          data={chartData}\n          margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\n          xScale={{ type: \"point\" }}\n          yScale={{ type: \"linear\" }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\n            tickRotation: -45\n          }}\n          axisLeft={{\n            orient: \"left\",\n            tickRotation: 0,\n            legend: \"人數\",\n            legendOffset: -60,\n            legendPosition: \"middle\"\n          }}\n          colors={colors}\n          pointSize={10}\n          pointColor={{ theme: \"background\" }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: \"serieColor\" }}\n          useMesh={true}\n          enableSlices=\"x\"\n        />\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {chartData.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div\n                className=\"legend\"\n                style={{ backgroundColor: colors[i] }}\n              />\n              <span>{el.id}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      {\n        //因為累積數量過大，所以分兩塊寫\n      }\n      <div style={{ height: \"500px\", marginTop:\"100px\" }}>\n        <h3 className=\"h3-title\">累積確診人數</h3>\n        <ResponsiveLine\n          data={chartData2}\n          margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\n          xScale={{ type: \"point\" }}\n          yScale={{ type: \"linear\" }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\n            tickRotation: -45\n          }}\n          axisLeft={{\n            orient: \"left\",\n            tickRotation: 0,\n            legend: \"人數\",\n            legendOffset: -60,\n            legendPosition: \"middle\"\n          }}\n          colors={colors2}\n          pointSize={10}\n          pointColor={{ theme: \"background\" }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: \"serieColor\" }}\n          useMesh={true}\n          enableSlices=\"x\"\n        />\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {chartData.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div\n                className=\"legend\"\n                style={{ backgroundColor: colors[i] }}\n              />\n              <span>{el.id}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default GlobalIncrease;\n","import React from \"react\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst EachRegion = (props) => {\n  const mapType = [\"Confirmed\", \"Recovered\", \"Deaths\"];\n  const mapTitle = {\n    Confirmed: \"確診人數\",\n    Recovered: \"治癒人數\",\n    Deaths: \"死亡人數\"\n  }\n  props.data.country.sort((a, b) => b[mapType[props.data.index]] - a[mapType[props.data.index]])\n  \n  return (\n    <div>\n      <h3 style={{textAlign: \"center\"}}>{props.data.label}<br/>{mapTitle[mapType[props.data.index]]}</h3>\n      <div style={{ height: \"500px\", display: \"flex\" }}>\n        <ResponsiveBar\n          data={props.data.country}\n          keys={[mapType[props.data.index]]}\n          indexBy=\"Country_Region\"\n          margin={{ top: 15, right: 10, bottom: 70, left: 65 }}\n          padding={props.data.country.length> 20 ?0.3 :0.7}\n          colors={{ scheme: \"nivo\"}}\n          axisBottom={{\n            format: v => `${(props.data.country.find(el => el.key === v) || {}).zh || v}`,\n            tickRotation: -40\n          }}\n          axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            legend: \"人數\",\n            legendPosition: \"start\",\n            legendOffset: -55\n          }}\n          animate={true}\n          labelSkipWidth={16}\n          labelSkipHeight={16}\n          enableLabel={false}\n          tooltip={({ id, value }) => (\n            <span>\n              {value}\n            </span>\n          )}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EachRegion;","import React, { useEffect, useState } from 'react';\nimport { ResponsivePie } from '@nivo/pie'\nimport './region.scss';\n\nimport EachRegion from \"./eachRegion\"\n\nconst Region = (props) => {\n  const [data, setData] = useState([]);\n  const [chartSwitch, setChartSwitch] = useState(false);\n  const [clickData, setClickData] = useState(null);\n  const mapTitle = [\"確診人數\", \"治癒人數\", \"死亡人數\"];\n  const regionTitle = {\n    Asia: \"亞洲\",\n    Europe: \"歐洲\",\n    Other: \"其他\",\n    Americas: \"美洲\",\n    Oceania: \"大洋洲\",\n    Africa: \"非洲\"\n  }\n  const nivoColor = [\"rgb(232, 193, 160)\", \"rgb(244, 117, 96)\", \"rgb(241, 225, 91)\", \"rgb(232, 168, 56)\", \"rgb(97, 205, 187)\", \"rgb(151, 227, 213)\"]\n\n  useEffect(() => {\n    let tmp = [[], [], []]\n    props.data.forEach(el => {\n      tmp[0].push({ id: el.region, value: el.Confirmed, label: regionTitle[el.region], country: el. confirmedDetail });\n      tmp[1].push({ id: el.region, value: el.Recovered, label: regionTitle[el.region], country: el.recoveredDetail });\n      tmp[2].push({ id: el.region, value: el.Deaths, label: regionTitle[el.region], country: el.deathsDetail });\n    })\n    setData(tmp);\n  }, [props.data])\n\n  function handleClick(data, i) {\n    if(data.value==0) return false;\n    setChartSwitch(true);\n    data.index = i;\n    setClickData(data);\n  }\n\n  return (\n    <div>\n      {!chartSwitch ?\n        <div>\n          <h3 className=\"h3-title\" style={{marginBottom: \"20px\"}}>五大洲圓餅圖</h3>\n          <div className=\"pie-wrapper\">\n            {!chartSwitch &&\n              data.map((el, index) => {\n                return (\n                  <div className=\"pie\" key={index}>\n                    <h3 className=\"title\">{mapTitle[index]}</h3>\n                    <ResponsivePie\n                      data={el}\n                      margin={{ top: 5, right: 10, bottom: 60, left: 10 }}\n                      innerRadius={0.3}\n                      padAngle={3}\n                      cornerRadius={2}\n                      colors={nivoColor}\n                      borderWidth={1}\n                      borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                      enableRadialLabels={false}\n                      slicesLabelsSkipAngle={10}\n                      motionStiffness={90}\n                      motionDamping={15}\n                      tooltip={function (e) { return <div >{e.label} : {e.value}</div> }}\n                      onClick={(data, event) => handleClick(data,index)}\n                    />\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n            {data.length != 0 &&\n              data[0].map((el, index) => {\n                return (\n                  <div key={index} className=\"pie-labels-wrapper\">\n                    <span className=\"pie-labels\" style={{ background: nivoColor[index] }}></span>\n                    {el.label}\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div> :\n        <div>\n          <div style={{ textDecoration: \"underline\", color: \"cornflowerblue\", cursor: \"pointer\"}} onClick={() => { setChartSwitch(false); setClickData(null) }}>返回</div>\n          <EachRegion data={clickData}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Region;","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\"\nimport { Spin, Icon } from \"antd\";\n\nimport Region from \"./region\"\n\nconst State = () => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const countryInfected = useSelector(state=>state.countryInfected);\n  const countryName = useSelector(state => state.countryInfo);\n  const [dataRegion, setDataRegion] = useState([])\n  useEffect(()=>{\n    if(!countryName || !countryInfected) return ()=>{};\n    const data = countryInfected.map(el=>{\n      let info = countryName.find(e=>e.key === el.Country_Region );\n      if(info){\n        return Object.assign(el,info);\n      }else{\n        el.region = 'Other';\n        el.subregion = 'Other';\n        el.flag = null;\n        return el;\n      }\n    })\n    const dataByRegion = Object.values(data.reduce((acc, re)=>{\n      if(acc[re.region]){\n        acc[re.region]['Confirmed'] += re.Confirmed;\n        acc[re.region]['confirmedDetail'].push(re)\n        acc[re.region]['Deaths'] += re.Deaths;\n        acc[re.region]['deathsDetail'].push(re)\n        acc[re.region]['Recovered'] += re.Recovered;\n        acc[re.region]['recoveredDetail'].push(re)\n      }else{\n        acc[re.region] = {\n          region: re.region,\n          Confirmed: re.Confirmed,\n          Deaths: re.Deaths,\n          Recovered: re.Recovered,\n          confirmedDetail: [],\n          deathsDetail:[],\n          recoveredDetail: []\n        };\n        acc[re.region].confirmedDetail.push(re);\n        acc[re.region].deathsDetail.push(re);\n        acc[re.region].recoveredDetail.push(re);\n      }\n      return acc;\n    },{}))\n    setDataRegion(dataByRegion);\n  }, [countryInfected, countryName])\n  \n  if (dataRegion.length === 0) return (<Spin indicator={antIcon} />);\n  \n  return (\n    <div style={{marginTop: \"30px\"}}>\n      {dataRegion ?\n        <Region data={dataRegion} />\n        :\n        <Spin indicator={antIcon} />\n      }\n    </div>\n  )\n}\n\nexport default State;","import React from \"react\";\nimport { Icon } from \"antd\";\n\nconst SlideBtn = (props)=>{\n  return (\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\n      <Icon type=\"project\" theme=\"filled\" />\n    </div>\n  ); \n}\nexport default SlideBtn;\n\n","import React from 'react';\nimport { Icon } from \"antd\";\n\nconst InfoBtn = props =>{\n  return (\n    <div className=\"slide-btn\" onClick={()=> props.onClick()}>\n      <Icon type=\"info\"/>\n    </div>\n    )\n}\n\nexport default InfoBtn;","import React from 'react';\nimport { Icon } from \"antd\";\n\nconst MapBtn = props => {\n  return (\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\n      <Icon type=\"global\" />\n    </div>\n  )\n}\n\nexport default MapBtn;","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Row, Col } from \"antd\";\n\nconst SlideMenu = ()=>{\n  const countryInfected = useSelector(state => state.countryInfected);\n\n  return (\n    <div className=\"slide-menu\" key=\"sideMenu\">\n      <h3>數據表</h3>\n      <Row className=\"row-title\" type=\"flex\" justify=\"space-between\">\n        <Col span={6}>國家</Col>\n        <Col className=\"col\" span={4}>\n          確診\n          </Col>\n        <Col className=\"col\" span={4}>\n          治癒\n          </Col>\n        <Col className=\"col\" span={4}>\n          死亡\n          </Col>\n      </Row>\n      {countryInfected.map(el => {\n        return (\n          <Row\n            className=\"row\"\n            key={el.Country_Region}\n            type=\"flex\"\n            justify=\"space-between\"\n            style={el.code==='TW' ? {color: \"darkred\"}: {}}\n          >\n            <Col span={6}>\n              {el.zh || el.Country_Region }\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Confirmed}\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Recovered}\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Deaths}\n            </Col>\n          </Row>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default SlideMenu;\n","import React, {useEffect, useState} from \"react\";\nimport { useSelector } from \"react-redux\"\nimport { ResponsiveChoropleth } from '@nivo/geo'\n\nimport mapFeature from \"../../config/map.json\"\n\nimport './map.scss';\n\nconst Map = (props)=> {\n  const infected = useSelector(state=>state.countryInfected);\n  const [data, setData] = useState([]);\n  const colors = [\"rgb(215, 100, 69)\", \"#F36A62\", \"rgb(232, 193, 160)\",\"#EBDFCF\", \"rgb(151, 227, 213)\", \"rgb(0, 176, 167)\"];\n\n  useEffect(()=>{\n    const tmp = infected.map(el=>{\n      return {\n        id: el.alpha3Code,\n        value: el.Confirmed,\n        zh: el.zh\n      }\n    })\n    setData(tmp);\n  }, [infected])\n  return (\n    <div className=\"map-wrapper\">\n      <div className=\"close-btn\" onClick={()=>props.onClick()}>Close</div>\n      {/* <h3 className=\"h3-title\">確診人數世界地圖</h3> */}\n      <ResponsiveChoropleth\n        data={data}\n        features={mapFeature.features}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        colors=\"nivo\"\n        domain={[0, 90000]}\n        unknownColor=\"#c7c7c7\"\n        label=\"data.zh\"\n        valueFormat=\",.0f\"\n        projectionType=\"equirectangular\"\n        projectionScale={155}\n        projectionRotation={[0, 0, 0]}\n        enableGraticule={true}\n        graticuleLineColor=\"#dddddd\"\n        borderWidth={0.5}\n        borderColor=\"#152538\"\n        legends={[\n          {\n            anchor: 'bottom-left',\n            direction: 'column',\n            justify: true,\n            translateX: 200,\n            translateY: -120,\n            itemsSpacing: 0,\n            itemWidth: 110,\n            itemHeight: 18,\n            itemDirection: 'left-to-right',\n            itemTextColor: '#ffffff',\n            itemOpacity: 0.95,\n            symbolSize: 18,\n          }\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default Map;","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport SlideBtn from \"./slideBtn\";\nimport InfoBtn from \"./infoBtn\";\nimport MapBtn from \"./mapBtn\";\nimport SlideMenu from \"./slideMenu\";\nimport Map from \"./map\";\nimport \"./slide.scss\";\n\nconst Slide = () => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const [openMap, setOpenMap] = useState(false);\n\n  function InfoModal() {\n    Modal.info({\n      title: \"About This Website\",\n      content: (\n        <div>\n          <p>這是一個react的練習專案，API是從下方的資料來源所寫的網站內找出來的，我不確定這樣的合法性，但我僅是練習，並無任何商業用途。</p>\n        </div>\n      ),\n      onOk() { },\n    })\n  }\n\n  return (\n    <div>\n      {openMap && <Map onClick={()=>setOpenMap(false)}/>}\n      <div className={\"slide-wrapper \" + (openMenu ? \"active\" : \"\")}>\n        {openMenu && <SlideMenu />}\n        <div>\n          <SlideBtn onClick={() => setOpenMenu(!openMenu)} />\n          <MapBtn onClick={()=> setOpenMap(!openMap)}/>\n          <InfoBtn onClick={InfoModal}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slide;\n\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Layout } from \"antd\";\nimport { useDispatch } from 'react-redux';\nimport { getCountryVirusData, getCountryInfo } from \"./action\"\n\nimport \"./styles.css\";\nimport \"antd/dist/antd.css\";\n\nimport Info from \"./components/Info\";\nimport Country from \"./components/Country\";\nimport GlobalIncrease from \"./components/globalIncrease\";\nimport State from \"./components/State\";\nimport Slide from \"./components/Slide/\";\nconst { Footer, Content } = Layout;\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() =>{\n    dispatch(getCountryVirusData())\n    dispatch(getCountryInfo())\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Content style={{ marginTop: \"20px\" }}>\n          <Slide />\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={21}>\n              <h2 className=\"text-align-center\">新型冠狀病毒 2019-nCoV</h2>\n              <Info />\n              <State />\n              <Country />\n              <GlobalIncrease />\n            </Col>\n          </Row>\n        </Content>\n        <Footer style={{ marginTop: \"100px\" }}>\n          <div style={{ textAlign: \"center\" }}>\n            資料來源：\n            <a href=\"https://github.com/BlankerL/DXY-2019-nCoV-Crawler\">\n              DXY-2019-nCoV-Crawler\n            </a>\n            / <a href=\"https://github.com/CSSEGISandData/COVID-19\">COVID-19</a>\n          </div>\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport zhCountryName from '../config/countryName.json';\n\nexport const getCountryVirusData = () => async dispatch => {\n  try {\n    const res = await axios.get('https://w5q6k.sse.codesandbox.io/api/v1/all')\n    let tmpTotal = {\n      confirmedCount: 0,\n      curedCount: 0,\n      deadCount: 0,\n    };\n    let tmpData = res.data.map(el => {\n      tmpTotal.confirmedCount += parseInt(el.Confirmed);\n      tmpTotal.curedCount += parseInt(el.Recovered);\n      tmpTotal.deadCount += parseInt(el.Deaths);\n      el.Confirmed = parseInt(el.Confirmed)\n      el.Recovered = parseInt(el.Recovered)\n      el.Deaths = parseInt(el.Deaths)\n      el.Country_Region = el['Country/Region']\n      return el;\n    });\n    tmpData.sort((a,b)=>{\n      return b.Confirmed - a.Confirmed\n    })\n    dispatch({\n      type: \"ADD_COUNTRY_INFECTED\",\n      data: tmpData\n    });\n    dispatch({\n      type: \"ADD_TOTAL_DATA\",\n      data: tmpTotal,\n    })\n  } catch (err) {\n    console.log(err)\n  }\n};\n\nexport const getCountryInfo = () => async dispatch => {\n  try {\n    const res = await axios.get('https://restcountries.eu/rest/v2/all');\n    const tmp = zhCountryName.map(el => {\n      let detail = res.data.find(e => e.alpha2Code === el.code);\n      if (detail) {\n        const { region, flag, subregion, alpha3Code } = detail;\n        return Object.assign(el, { region, flag, subregion, alpha3Code })\n      } else {\n        el.region = 'Other';\n        el.flag = null;\n        el.subregion = 'Other';\n        return el;\n      }\n    })\n    dispatch({\n      type: \"ADD_COUNTRY_INFO\",\n      data: tmp\n    })\n  } catch (err) {\n    console.log(err)\n  }\n}","const initState = {\n  countryInfected: null,\n  totalData: {},\n  countryInfo: null,\n};\n\nexport default initState;","import initState from '../store'\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_COUNTRY_INFECTED': {\n      return {\n        ...state,\n        countryInfected: action.data,\n      };\n    }\n    case 'ADD_TOTAL_DATA': {\n      return {\n        ...state,\n        totalData: action.data,\n      };\n    }\n    case 'ADD_COUNTRY_INFO': {\n      return {\n        ...state,\n        countryInfo: action.data,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from 'react-redux';\nimport { compose ,createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport reducer from './reducer';\nconst composeEnhancer = compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f);\n\nconst store = createStore(reducer, composeEnhancer);\n\nconst rootElement = document.getElementById(\"root\");\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, rootElement);\n"],"sourceRoot":""}
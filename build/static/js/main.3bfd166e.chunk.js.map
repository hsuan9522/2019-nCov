{"version":3,"sources":["components/Info/globalStatic.js","components/Info/index.js","components/Country/index.js","components/globalIncrease.js","components/State/eachRegion.js","components/State/region.js","components/State/index.js","components/Slide/slideBtn.js","components/Slide/infoBtn.js","components/Slide/mapBtn.js","components/Slide/slideMenu.js","components/Slide/map.js","components/Slide/index.js","App.js","action/index.js","store/index.js","reducer/index.js","index.js"],"names":["globalStatic","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","react_default","a","createElement","row","type","justify","className","col","span","statistic","title","value","confirmedCount","curedCount","deadCount","offset","style","marginTop","textAlign","dayjs","updateTime","format","React","Component","Info","antIcon","icon","fontSize","spin","totalData","useSelector","_useState","useState","_useState2","slicedToArray","virusInfo","setVirusInfo","useEffect","axios","get","then","res","results","note","_","isEmpty","i","push","concat","catch","err","console","log","globalStatic_globalStatic","length","list","size","header","bordered","dataSource","renderItem","item","Item","key","tify","indicator","CountryChart","countryInfected","countryName","countryInfo","mapTitle","Confirmed","Recovered","Deaths","keys","colors","height","nivo_bar_esm","layout","filter","el","indexBy","margin","top","right","bottom","left","padding","axisLeft","v","find","zh","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","labelSkipWidth","labelSkipHeight","enableLabel","tooltip","_ref","id","axisTop","_ref2","display","justifyContent","map","backgroundColor","RangePicker","DatePicker","GlobalIncrease","everydayCount","chartData","setChartData","_useState3","_useState4","tmpChartData","setTmpChartData","everydayTotal","makeChartData","data1","data2","cumData","forEach","includes","parseInt","d","Date","yy","getUTCFullYear","mm","getUTCMonth","toString","dd","split","x","y","tmpCount","onChange","date","dateString","chart","range","findIndex","e","slice","dateOnChange","disabledDate","current","valueOf","now","nivo_line_esm","xScale","yScale","axisRight","replace","orient","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","useMesh","enableSlices","EachRegion","mapType","country","sort","b","index","label","scheme","Region","setData","chartSwitch","setChartSwitch","_useState5","_useState6","clickData","setClickData","regionTitle","Asia","Europe","Other","Americas","Oceania","Africa","nivoColor","tmp","region","confirmedDetail","recoveredDetail","deathsDetail","textDecoration","color","cursor","onClick","eachRegion","marginBottom","nivo_pie_esm","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","modifiers","enableRadialLabels","slicesLabelsSkipAngle","motionStiffness","motionDamping","event","handleClick","background","State","dataRegion","setDataRegion","info","Country_Region","assign","subregion","flag","dataByRegion","values","reduce","acc","re","State_region","SlideBtn","InfoBtn","MapBtn","SlideMenu","OBJECTID","code","Map","infected","alpha3Code","nivo_geo_esm","features","mapFeature","domain","unknownColor","valueFormat","projectionType","projectionScale","projectionRotation","enableGraticule","graticuleLineColor","legends","anchor","direction","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","Slide","openMenu","setOpenMenu","openMap","setOpenMap","components_Slide_map","slideMenu","slideBtn","mapBtn","infoBtn","Modal","content","onOk","Footer","Layout","Content","App","dispatch","useDispatch","asyncToGenerator","regenerator_default","mark","_callee","tmpTotal","tmpData","wrap","_context","prev","next","sent","attributes","Last_Update","t0","stop","_x","apply","arguments","_callee2","_context2","zhCountryName","detail","alpha2Code","_x2","components_Slide","components_Info","components_State","Country","components_globalIncrease","href","initState","reducer","undefined","action","objectSpread2","composeEnhancer","compose","applyMiddleware","thunk","window","devToolsExtension","f","store","createStore","rootElement","document","getElementById","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.3bfd166e.chunk.js","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Statistic, Row, Col } from \"antd\";\n\nexport default class globalStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data = this.props.data;\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"space-between\" className=\"text-align-center\">\n          <Col span={8}>\n            <Statistic title=\"確診人數\" value={data.confirmedCount} />\n          </Col>\n          <Col span={8}>\n            <Statistic title=\"治癒人數\" value={data.curedCount} />\n          </Col>\n          <Col span={8}>\n            <Statistic title=\"死亡人數\" value={data.deadCount} />\n          </Col>\n          <Col span={8} offset={16}>\n            <div\n              className=\"update-time\"\n              style={{ marginTop: \"10px\", textAlign: \"center\" }}\n            >\n              更新時間：{dayjs(data.updateTime).format(\"YYYY/MM/DD HH:MM\")}\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\nimport _ from \"loadsh\";\nimport { List, Spin, Icon } from \"antd\";\nimport { tify } from \"chinese-conv\";\n\nimport GlobalStatic from \"./globalStatic\";\n\nimport \"./globalInfo.scss\";\n\nconst Info = () => {\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n  const totalData = useSelector(state => state.totalData);\n  const [virusInfo, setVirusInfo] = useState([]);\n\n  const getVirusInfo = () =>{\n    axios\n      .get(\"https://lab.isaaclin.cn/nCoV/api/overall\")\n      .then(res => {\n        const data = res.data.results[0];\n        let note = [];\n        if (!_.isEmpty(data)) {\n          for (let i = 0; i < 3; i++) {\n            note.push(data[`remark${i + 1}`]);\n          }\n          for (let i = 0; i < 3; i++) {\n            note.push(data[`note${i + 1}`]);\n          }\n        }\n        setVirusInfo(note);\n      })\n      .catch(err => console.log(\"info err\"));\n  }\n\n  useEffect(()=>{\n    getVirusInfo();\n  },[])\n\n  return (\n    <div>\n      <GlobalStatic data={totalData} />\n      {virusInfo.length > 0 ? (\n        <List\n          style={{ marginTop: \"10px\" }}\n          size=\"small\"\n          header={<div>Note</div>}\n          bordered\n          dataSource={virusInfo}\n          renderItem={(item, i) => (\n            <List.Item key={i}>{tify(item)}</List.Item>\n          )}\n        />\n      ) : (\n          <div className=\"loading\">\n            <Spin indicator={antIcon} />\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst CountryChart = props => {\n  const data = useSelector(state => state.countryInfected);\n  const countryName = useSelector(state => state.countryInfo);\n  if(!data || !countryName) return (<div>There is no Data!</div>)\n  const limit = 5000;\n  const mapTitle = {\n    Confirmed: \"確診人數\",\n    Recovered: \"治癒人數\",\n    Deaths: \"死亡人數\"\n  };\n  const keys = [\"Confirmed\", \"Recovered\", \"Deaths\"];\n  const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n\n  return (\n      <div>\n        <h3 className=\"h3-title\">各國人數狀態</h3>\n        <div style={{ height: \"2500px\" }}>\n          <ResponsiveBar\n            layout=\"horizontal\"\n            data={data.filter(el => el.Confirmed < limit)}\n            keys={keys}\n            indexBy=\"Country_Region\"\n            margin={{ top: 5, right: 10, bottom: 50, left: 65 }}\n            padding={0.3}\n            colors={colors}\n            axisLeft={{\n              format: v =>\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\n            }}\n            axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"人數\",\n              legendPosition: \"middle\",\n              legendOffset: 40\n            }}\n            animate={true}\n            labelSkipWidth={16}\n            labelSkipHeight={16}\n            enableLabel={false}\n            tooltip={({ id, value }) => (\n              <span>\n                {mapTitle[id]}: {value}\n              </span>\n            )}\n          />\n        </div>\n        <div style={{ height: \"700px\" }}>\n          <ResponsiveBar\n            layout=\"horizontal\"\n            data={data.filter(el => el.Confirmed >= limit)}\n            keys={keys}\n            indexBy=\"Country_Region\"\n            margin={{ top: 5, right: 10, bottom: 50, left: 65 }}\n            padding={0.3}\n            colors={colors}\n            axisTop={null}\n            axisLeft={{\n              format: v =>\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\n            }}\n            axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: \"人數\",\n              legendPosition: \"middle\",\n              legendOffset: 40\n            }}\n            animate={true}\n            labelSkipWidth={16}\n            labelSkipHeight={16}\n            enableLabel={false}\n            tooltip={({ id, value }) => (\n              <span>\n                {mapTitle[id]}: {value}\n              </span>\n            )}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {keys.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div className=\"legend\" style={{ backgroundColor: colors[i] }} />\n              <span>{mapTitle[el]}</span>\n            </div>\n          ))}\n        </div>\n        <div style={{ textAlign: \"right\" }}>\n          <small>*各國疫情人數持續增加，因此有些國家增加數量過大，會導致較少感染人數的國家圖表顯示不出來。</small>\n          <small>另外分為上下部份，下部分為確診人數超過5000人次。</small>\n        </div>\n      </div>\n  )\n}\n\nexport default CountryChart;","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { DatePicker } from \"antd\";\nimport \"./globalIncrease.scss\";\n\nconst { RangePicker } = DatePicker;\n\nconst GlobalIncrease = () => {\n  const [chartData, setChartData] = useState([]);\n  const [tmpChartData, setTmpChartData] = useState([])\n  let everydayCount, everydayTotal = [];\n  const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n\n  useEffect(() => {\n    axios.get('https://w5q6k.sse.codesandbox.io/api/v1/cumulative')\n      .then(res => {\n        let cumData = {}\n        let filter = [\"Province/State\", \"Country/Region\", \"Lat\", \"Long\"]\n        // console.log(res.data)\n        res.data.forEach(el=>{\n          for(let i in el){\n            if (filter.includes(i)) continue;\n            cumData[i] = cumData[i] + parseInt(el[i]) || 0;\n          }\n        })\n        for(let i in cumData){\n          const d = new Date(i);\n          const yy = d.getUTCFullYear()\n          let mm = d.getUTCMonth()+1;\n          mm = mm.toString().length==1 ? '0'+ mm : mm;\n          let dd = i.split('/')[1]\n          dd = dd.toString().length==1 ? '0'+ dd : dd;\n          everydayTotal.push({\n            x:  yy +'/' + mm + '/' + dd,\n            y: cumData[i]\n          })\n        }\n        everydayCount = everydayTotal.map((el, i) => {\n          let tmpCount = el.y;\n          if (i !== 0) {\n            tmpCount -= everydayTotal[i - 1].y;\n          }\n          return {\n            x: el.x,\n            y: tmpCount\n          };\n        });\n        makeChartData();\n      })\n  }, [])\n\n  function makeChartData(data1, data2) {\n    \n    const data = [\n      {\n        id: \"每日確診人數\",\n        data: data1 || everydayCount\n      },\n      {\n        id: \"累積總數\",\n        data: data2 || everydayTotal\n      }\n    ];\n    setChartData(data);\n\n    if (!data1 && !data2) {\n      setTmpChartData(data);\n    } \n  }\n\n  function disableDate(current) {\n    return (\n      current &&\n      (current.valueOf() > Date.now() ||\n        current.valueOf() < new Date(\"2020/01/20\"))\n    );\n  }\n\n  function dateOnChange(date, chart) {\n    if (date[0] === \"\" && date[1] === \"\") {\n      makeChartData();\n    } else {\n      let range = [];\n      date.forEach((el, i) => {\n        range[i] = chart[0].data.findIndex(e => e.x === el);\n      });\n      const count = chart[0].data.slice(range[0], range[1] + 1);\n      const total = chart[1].data.slice(range[0], range[1] + 1);\n      makeChartData(count, total);\n    }\n  }\n\n  return (\n    <div>\n      <div style={{ height: \"500px\" }}>\n        <h3 className=\"h3-title\">每日/累積確診人數</h3>\n        <div className=\"date-range\">\n          <span>查詢區間：</span>\n          <RangePicker\n            onChange={(date, dateString) =>\n              dateOnChange(dateString, tmpChartData)\n            }\n            disabledDate={disableDate}\n            format=\"YYYY/MM/DD\"\n          />\n        </div>\n\n        <ResponsiveLine\n          data={chartData}\n          margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\n          xScale={{ type: \"point\" }}\n          yScale={{ type: \"linear\" }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\n            tickRotation: -45\n          }}\n          axisLeft={{\n            orient: \"left\",\n            tickRotation: 0,\n            legend: \"人數\",\n            legendOffset: -60,\n            legendPosition: \"middle\"\n          }}\n          colors={colors}\n          pointSize={10}\n          pointColor={{ theme: \"background\" }}\n          pointBorderWidth={2}\n          pointBorderColor={{ from: \"serieColor\" }}\n          useMesh={true}\n          enableSlices=\"x\"\n        />\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {chartData.map((el, i) => (\n            <div key={i} className=\"legend-wrapper\">\n              <div\n                className=\"legend\"\n                style={{ backgroundColor: colors[i] }}\n              />\n              <span>{el.id}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GlobalIncrease;\n//舊的api用，因為已經不更新了所以註解掉\n// export default class GlobalIncrease extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       everydayTotal: [], //累積總數\n//       everydayCount: [], //每日人數\n//       chartData: [],\n//       tmpChartData: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     axios\n//       .get(\n//         \"https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/cases_time_v3/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Report_Date_String%20asc&resultOffset=0&resultRecordCount=2000&cacheHint=true\"\n//       )\n//       .then(res => {\n//         const everydayTotal = res.data.features.map(el => {\n//           return {\n//             x: el.attributes.Report_Date_String,\n//             y: el.attributes.Total_Confirmed\n//           };\n//         });\n//         const everydayCount = everydayTotal.map((el, i) => {\n//           let tmpCount = el.y;\n//           if (i !== 0) {\n//             tmpCount -= everydayTotal[i - 1].y;\n//           }\n//           return {\n//             x: el.x,\n//             y: tmpCount\n//           };\n//         });\n//         this.setState({\n//           everydayTotal: everydayTotal,\n//           everydayCount: everydayCount\n//         });\n//         this.makeChartData();\n//         this.setState({ tmpChartData: this.state.chartData });\n//       });\n//   }\n//   makeChartData(data1, data2) {\n//     const data = [\n//       {\n//         id: \"每日確診人數\",\n//         data: data1 || this.state.everydayCount\n//       },\n//       {\n//         id: \"累積總數\",\n//         data: data2 || this.state.everydayTotal\n//       }\n//     ];\n//     this.setState({ chartData: data });\n//   }\n\n//   dateOnChange(date, chart) {\n//     if (date[0] === \"\" && date[1] === \"\") {\n//       this.makeChartData();\n//     } else {\n//       let range = [];\n//       date.forEach((el, i) => {\n//         range[i] = chart[0].data.findIndex(e => e.x === el);\n//       });\n//       const count = chart[0].data.slice(range[0], range[1] + 1);\n//       const total = chart[1].data.slice(range[0], range[1] + 1);\n//       this.makeChartData(count, total);\n//     }\n//   }\n\n//   disableDate(current) {\n//     return (\n//       current &&\n//       (current.valueOf() > Date.now() ||\n//         current.valueOf() < new Date(\"2020/01/20\"))\n//     );\n//   }\n\n//   render() {\n//     const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\n\n//     return (\n//       <div>\n//         <div style={{ height: \"500px\" }}>\n//           <h3 className=\"h3-title\">每日/累積確診人數</h3>\n//           <div className=\"date-range\">\n//             <span>查詢區間：</span>\n//             <RangePicker\n//               onChange={(date, dateString) =>\n//                 this.dateOnChange(dateString, this.state.tmpChartData)\n//               }\n//               disabledDate={this.disableDate}\n//               format=\"YYYY/MM/DD\"\n//             />\n//           </div>\n\n//           <ResponsiveLine\n//             data={this.state.chartData}\n//             margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\n//             xScale={{ type: \"point\" }}\n//             yScale={{ type: \"linear\" }}\n//             axisTop={null}\n//             axisRight={null}\n//             axisBottom={{\n//               format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\n//               tickRotation: -45\n//             }}\n//             axisLeft={{\n//               orient: \"left\",\n//               tickRotation: 0,\n//               legend: \"人數\",\n//               legendOffset: -60,\n//               legendPosition: \"middle\"\n//             }}\n//             colors={colors}\n//             pointSize={10}\n//             pointColor={{ theme: \"background\" }}\n//             pointBorderWidth={2}\n//             pointBorderColor={{ from: \"serieColor\" }}\n//             useMesh={true}\n//             enableSlices=\"x\"\n//           />\n//           <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n//             {this.state.chartData.map((el, i) => (\n//               <div key={i} className=\"legend-wrapper\">\n//                 <div\n//                   className=\"legend\"\n//                   style={{ backgroundColor: colors[i] }}\n//                 />\n//                 <span>{el.id}</span>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst EachRegion = (props) => {\n  const mapType = [\"Confirmed\", \"Recovered\", \"Deaths\"];\n  const mapTitle = {\n    Confirmed: \"確診人數\",\n    Recovered: \"治癒人數\",\n    Deaths: \"死亡人數\"\n  }\n  props.data.country.sort((a, b) => b[mapType[props.data.index]] - a[mapType[props.data.index]])\n  \n  return (\n    <div>\n      <h3 style={{textAlign: \"center\"}}>{props.data.label}<br/>{mapTitle[mapType[props.data.index]]}</h3>\n      <div style={{ height: \"500px\", display: \"flex\" }}>\n        <ResponsiveBar\n          data={props.data.country}\n          keys={[mapType[props.data.index]]}\n          indexBy=\"Country_Region\"\n          margin={{ top: 15, right: 10, bottom: 70, left: 65 }}\n          padding={props.data.country.length> 20 ?0.3 :0.7}\n          colors={{ scheme: \"nivo\"}}\n          axisBottom={{\n            format: v => `${(props.data.country.find(el => el.key === v) || {}).zh || v}`,\n            tickRotation: -40\n          }}\n          axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            legend: \"人數\",\n            legendPosition: \"start\",\n            legendOffset: -55\n          }}\n          animate={true}\n          labelSkipWidth={16}\n          labelSkipHeight={16}\n          enableLabel={false}\n          tooltip={({ id, value }) => (\n            <span>\n              {value}\n            </span>\n          )}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EachRegion;","import React, { useEffect, useState } from 'react';\nimport { ResponsivePie } from '@nivo/pie'\nimport './region.scss';\n\nimport EachRegion from \"./eachRegion\"\n\nconst Region = (props) => {\n  const [data, setData] = useState([]);\n  const [chartSwitch, setChartSwitch] = useState(false);\n  const [clickData, setClickData] = useState(null);\n\n  const mapTitle = [\"確診人數\", \"治癒人數\", \"死亡人數\"];\n  const regionTitle = {\n    Asia: \"亞洲\",\n    Europe: \"歐洲\",\n    Other: \"其他\",\n    Americas: \"美洲\",\n    Oceania: \"大洋洲\",\n    Africa: \"非洲\"\n  }\n  const nivoColor = [\"rgb(232, 193, 160)\", \"rgb(244, 117, 96)\", \"rgb(241, 225, 91)\", \"rgb(232, 168, 56)\", \"rgb(97, 205, 187)\", \"rgb(151, 227, 213)\"]\n\n  useEffect(() => {\n    let tmp = [[], [], []]\n    props.data.forEach(el => {\n      tmp[0].push({ id: el.region, value: el.Confirmed, label: regionTitle[el.region], country: el. confirmedDetail });\n      tmp[1].push({ id: el.region, value: el.Recovered, label: regionTitle[el.region], country: el.recoveredDetail });\n      tmp[2].push({ id: el.region, value: el.Deaths, label: regionTitle[el.region], country: el.deathsDetail });\n    })\n    setData(tmp);\n  }, [props.data])\n\n  function handleClick(data, i) {\n    if(data.value==0) return false;\n    setChartSwitch(true);\n    data.index = i;\n    setClickData(data);\n  }\n\n  return (\n    <div>\n      {!chartSwitch ?\n        <div>\n          <h3 className=\"h3-title\" style={{marginBottom: \"20px\"}}>五大洲圓餅圖</h3>\n          <div className=\"pie-wrapper\">\n            {!chartSwitch &&\n              data.map((el, index) => {\n                return (\n                  <div className=\"pie\" key={index}>\n                    <h3 className=\"title\">{mapTitle[index]}</h3>\n                    <ResponsivePie\n                      data={el}\n                      margin={{ top: 5, right: 10, bottom: 60, left: 10 }}\n                      innerRadius={0.3}\n                      padAngle={3}\n                      cornerRadius={2}\n                      colors={nivoColor}\n                      borderWidth={1}\n                      borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                      enableRadialLabels={false}\n                      slicesLabelsSkipAngle={10}\n                      motionStiffness={90}\n                      motionDamping={15}\n                      tooltip={function (e) { return <div >{e.label} : {e.value}</div> }}\n                      onClick={(data, event) => handleClick(data,index)}\n                    />\n                  </div>\n                )\n              })\n            }\n          </div>\n          <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n            {data.length != 0 &&\n              data[0].map((el, index) => {\n                return (\n                  <div key={index} className=\"pie-labels-wrapper\">\n                    <span className=\"pie-labels\" style={{ background: nivoColor[index] }}></span>\n                    {el.label}\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div> :\n        <div>\n          <div style={{ textDecoration: \"underline\", color: \"cornflowerblue\", cursor: \"pointer\"}} onClick={() => { setChartSwitch(false); setClickData(null) }}>返回</div>\n          <EachRegion data={clickData}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Region;","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\"\n\nimport Region from \"./region\"\n\nconst State = () => {\n  const countryInfected = useSelector(state=>state.countryInfected);\n  const countryName = useSelector(state => state.countryInfo);\n  const [dataRegion, setDataRegion] = useState([])\n\n  useEffect(()=>{\n    if(!countryName || !countryInfected) return ()=>{};\n    const data = countryInfected.map(el=>{\n      let info = countryName.find(e=>e.key === el.Country_Region );\n      if(info){\n        return Object.assign(el,info);\n      }else{\n        el.region = 'Other';\n        el.subregion = 'Other';\n        el.flag = null;\n        return el;\n      }\n    })\n    const dataByRegion = Object.values(data.reduce((acc, re)=>{\n      if(acc[re.region]){\n        acc[re.region]['Confirmed'] += re.Confirmed;\n        acc[re.region]['confirmedDetail'].push(re)\n        acc[re.region]['Deaths'] += re.Deaths;\n        acc[re.region]['deathsDetail'].push(re)\n        acc[re.region]['Recovered'] += re.Recovered;\n        acc[re.region]['recoveredDetail'].push(re)\n      }else{\n        acc[re.region] = {\n          region: re.region,\n          Confirmed: re.Confirmed,\n          Deaths: re.Deaths,\n          Recovered: re.Recovered,\n          confirmedDetail: [],\n          deathsDetail:[],\n          recoveredDetail: []\n        };\n        acc[re.region].confirmedDetail.push(re);\n        acc[re.region].deathsDetail.push(re);\n        acc[re.region].recoveredDetail.push(re);\n      }\n      return acc;\n    },{}))\n    setDataRegion(dataByRegion);\n  }, [countryInfected, countryName])\n\n  return (\n    <div style={{marginTop: \"30px\"}}>\n      {dataRegion &&\n        <Region data={dataRegion} />\n      }\n    </div>\n  )\n}\n\nexport default State;","import React from \"react\";\nimport { Icon } from \"antd\";\n\nconst SlideBtn = (props)=>{\n  return (\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\n      <Icon type=\"project\" theme=\"filled\" />\n    </div>\n  ); \n}\nexport default SlideBtn;\n\n","import React from 'react';\nimport { Icon } from \"antd\";\n\nconst InfoBtn = props =>{\n  return (\n    <div className=\"slide-btn\" onClick={()=> props.onClick()}>\n      <Icon type=\"info\"/>\n    </div>\n    )\n}\n\nexport default InfoBtn;","import React from 'react';\nimport { Icon } from \"antd\";\n\nconst MapBtn = props => {\n  return (\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\n      <Icon type=\"global\" />\n    </div>\n  )\n}\n\nexport default MapBtn;","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Row, Col } from \"antd\";\n\nconst SlideMenu = ()=>{\n  const countryInfected = useSelector(state => state.countryInfected);\n\n  return (\n    <div className=\"slide-menu\">\n      <h3>數據表</h3>\n      <Row className=\"row-title\" type=\"flex\" justify=\"space-between\">\n        <Col span={6}>國家</Col>\n        <Col className=\"col\" span={4}>\n          確診\n          </Col>\n        <Col className=\"col\" span={4}>\n          治癒\n          </Col>\n        <Col className=\"col\" span={4}>\n          死亡\n          </Col>\n      </Row>\n      {countryInfected.map(el => {\n        return (\n          <Row\n            className=\"row\"\n            key={el.OBJECTID}\n            type=\"flex\"\n            justify=\"space-between\"\n            style={el.code==='TW' ? {color: \"darkred\"}: {}}\n          >\n            <Col span={6}>\n              {el.zh || el.Country_Region }\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Confirmed}\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Recovered}\n            </Col>\n            <Col className=\"col\" span={4}>\n              {el.Deaths}\n            </Col>\n          </Row>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default SlideMenu;\n","import React, {useEffect, useState} from \"react\";\nimport { useSelector } from \"react-redux\"\nimport { ResponsiveChoropleth } from '@nivo/geo'\n\nimport mapFeature from \"../../config/map.json\"\n\nimport './map.scss';\n\nconst Map = (props)=> {\n  const infected = useSelector(state=>state.countryInfected);\n  const [data, setData] = useState([]);\n  const colors = [\"rgb(215, 100, 69)\", \"#F36A62\", \"rgb(232, 193, 160)\",\"#EBDFCF\", \"rgb(151, 227, 213)\", \"rgb(0, 176, 167)\"];\n\n  useEffect(()=>{\n    const tmp = infected.map(el=>{\n      return {\n        id: el.alpha3Code,\n        value: el.Confirmed,\n        zh: el.zh\n      }\n    })\n    setData(tmp);\n  }, [infected])\n  return (\n    <div className=\"map-wrapper\">\n      <div className=\"close-btn\" onClick={()=>props.onClick()}>Close</div>\n      {/* <h3 className=\"h3-title\">確診人數世界地圖</h3> */}\n      <ResponsiveChoropleth\n        data={data}\n        features={mapFeature.features}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        colors=\"nivo\"\n        domain={[0, 90000]}\n        unknownColor=\"#c7c7c7\"\n        label=\"data.zh\"\n        valueFormat=\",.0f\"\n        projectionType=\"equirectangular\"\n        projectionScale={155}\n        projectionRotation={[0, 0, 0]}\n        enableGraticule={true}\n        graticuleLineColor=\"#dddddd\"\n        borderWidth={0.5}\n        borderColor=\"#152538\"\n        legends={[\n          {\n            anchor: 'bottom-left',\n            direction: 'column',\n            justify: true,\n            translateX: 200,\n            translateY: -120,\n            itemsSpacing: 0,\n            itemWidth: 110,\n            itemHeight: 18,\n            itemDirection: 'left-to-right',\n            itemTextColor: '#ffffff',\n            itemOpacity: 0.95,\n            symbolSize: 18,\n          }\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default Map;","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport SlideBtn from \"./slideBtn\";\nimport InfoBtn from \"./infoBtn\";\nimport MapBtn from \"./mapBtn\";\nimport SlideMenu from \"./slideMenu\";\nimport Map from \"./map\";\nimport \"./slide.scss\";\n\nconst Slide = () => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const [openMap, setOpenMap] = useState(false);\n\n  function InfoModal() {\n    Modal.info({\n      title: \"About This Website\",\n      content: (\n        <div>\n          <p>這是一個react的練習專案，API是從下方的資料來源所寫的網站內找出來的，我不確定這樣的合法性，但我僅是練習，並無任何商業用途。</p>\n        </div>\n      ),\n      onOk() { },\n    })\n  }\n\n  return (\n    <div>\n      {openMap && <Map onClick={()=>setOpenMap(false)}/>}\n      <div className={\"slide-wrapper \" + (openMenu ? \"active\" : \"\")}>\n        {openMenu && <SlideMenu />}\n        <div>\n          <SlideBtn onClick={() => setOpenMenu(!openMenu)} />\n          <MapBtn onClick={()=> setOpenMap(!openMap)}/>\n          <InfoBtn onClick={InfoModal}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slide;\n\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Layout } from \"antd\";\nimport { useDispatch } from 'react-redux';\nimport { getCountryVirusData, getCountryInfo } from \"./action\"\n\nimport \"./styles.css\";\nimport \"antd/dist/antd.css\";\n\nimport Info from \"./components/Info\";\nimport Country from \"./components/Country\";\nimport GlobalIncrease from \"./components/globalIncrease\";\nimport State from \"./components/State\";\nimport Slide from \"./components/Slide/\";\nconst { Footer, Content } = Layout;\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() =>{\n    dispatch(getCountryVirusData())\n    dispatch(getCountryInfo())\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Content style={{ marginTop: \"20px\" }}>\n          <Slide />\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={21}>\n              <h2 className=\"text-align-center\">新型冠狀病毒 2019-nCoV</h2>\n              <Info />\n              <State />\n              <Country />\n              <GlobalIncrease />\n            </Col>\n          </Row>\n        </Content>\n        <Footer style={{ marginTop: \"100px\" }}>\n          <div style={{ textAlign: \"center\" }}>\n            資料來源：\n            <a href=\"https://github.com/BlankerL/DXY-2019-nCoV-Crawler\">\n              DXY-2019-nCoV-Crawler\n            </a>\n            / <a href=\"https://www.gisaid.org/\">GISAID</a>\n          </div>\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport zhCountryName from '../config/countryName.json';\n\nexport const getCountryVirusData = () => async dispatch => {\n  try {\n    const res = await axios.get('https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&outSR=102100&resultOffset=0&resultRecordCount=250&cacheHint=true')\n    let tmpTotal = {\n      confirmedCount: 0,\n      curedCount: 0,\n      deadCount: 0,\n      updateTime: 0\n    };\n    const tmpData = res.data.features.map(el => {\n      tmpTotal.confirmedCount += el.attributes.Confirmed;\n      tmpTotal.curedCount += el.attributes.Recovered;\n      tmpTotal.deadCount += el.attributes.Deaths;\n      tmpTotal.updateTime =\n        el.attributes.Last_Update > tmpTotal.updateTime\n          ? el.attributes.Last_Update\n          : tmpTotal.updateTime;\n      return el.attributes;\n    });\n    dispatch({\n      type: \"ADD_COUNTRY_INFECTED\",\n      data: tmpData\n    });\n    dispatch({\n      type: \"ADD_TOTAL_DATA\",\n      data: tmpTotal,\n    })\n  } catch (err) {\n    console.log(err)\n  }\n};\n\nexport const getCountryInfo = () => async dispatch => {\n  try {\n    const res = await axios.get('https://restcountries.eu/rest/v2/all');\n    const tmp = zhCountryName.map(el => {\n      let detail = res.data.find(e => e.alpha2Code === el.code);\n      if (detail) {\n        const { region, flag, subregion, alpha3Code } = detail;\n        return Object.assign(el, { region, flag, subregion, alpha3Code })\n      } else {\n        el.region = 'Other';\n        el.flag = null;\n        el.subregion = 'Other';\n        return el;\n      }\n    })\n    dispatch({\n      type: \"ADD_COUNTRY_INFO\",\n      data: tmp\n    })\n  } catch (err) {\n    console.log(err)\n  }\n}","const initState = {\n  countryInfected: null,\n  totalData: {},\n  countryInfo: null,\n};\n\nexport default initState;","import initState from '../store'\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_COUNTRY_INFECTED': {\n      return {\n        ...state,\n        countryInfected: action.data,\n      };\n    }\n    case 'ADD_TOTAL_DATA': {\n      return {\n        ...state,\n        totalData: action.data,\n      };\n    }\n    case 'ADD_COUNTRY_INFO': {\n      return {\n        ...state,\n        countryInfo: action.data,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from 'react-redux';\nimport { compose ,createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport reducer from './reducer';\nconst composeEnhancer = compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f);\n\nconst store = createStore(reducer, composeEnhancer);\n\nconst rootElement = document.getElementById(\"root\");\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, rootElement);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Info/globalStatic.js","components/Info/index.js","components/Country/index.js","components/globalIncrease.js","components/State/eachRegion.js","components/State/region.js","components/State/index.js","components/Slide/slideBtn.js","components/Slide/infoBtn.js","components/Slide/mapBtn.js","components/Slide/slideMenu.js","components/Slide/map.js","components/Slide/index.js","App.js","action/index.js","store/index.js","reducer/index.js","index.js"],"names":["globalStatic","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","react_default","a","createElement","row","type","justify","className","col","span","statistic","title","value","confirmedCount","curedCount","deadCount","offset","style","marginTop","textAlign","dayjs","updateTime","format","React","Component","Info","antIcon","icon","fontSize","spin","totalData","useSelector","_useState","useState","_useState2","slicedToArray","virusInfo","setVirusInfo","useEffect","axios","get","then","res","results","note","_","isEmpty","i","push","concat","catch","err","console","log","globalStatic_globalStatic","length","list","size","header","bordered","dataSource","renderItem","item","Item","key","tify","indicator","CountryChart","countryInfected","countryName","countryInfo","withoutChina","filter","el","Country_Region","Confirmed","mapTitle","Recovered","Deaths","keys","colors","height","nivo_bar_esm","layout","indexBy","margin","top","right","bottom","left","padding","axisLeft","v","find","zh","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","labelSkipWidth","labelSkipHeight","enableLabel","tooltip","_ref","id","axisTop","_ref2","display","justifyContent","map","backgroundColor","RangePicker","DatePicker","GlobalIncrease","esm_classCallCheck","esm_possibleConstructorReturn","esm_getPrototypeOf","everydayTotal","everydayCount","chartData","tmpChartData","_this2","features","x","attributes","Report_Date_String","y","Total_Confirmed","tmpCount","setState","makeChartData","data1","data2","date","chart","range","forEach","findIndex","e","count","slice","total","current","valueOf","Date","now","_this3","onChange","dateString","dateOnChange","disabledDate","disableDate","nivo_line_esm","xScale","yScale","axisRight","replace","orient","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","useMesh","enableSlices","EachRegion","mapType","country","sort","b","index","label","scheme","Region","esm_slicedToArray","setData","_useState3","_useState4","chartSwitch","setChartSwitch","_useState5","_useState6","clickData","setClickData","regionTitle","Asia","Europe","Other","Americas","Oceania","Africa","nivoColor","tmp","region","confirmedDetail","recoveredDetail","deathsDetail","textDecoration","color","cursor","onClick","eachRegion","marginBottom","nivo_pie_esm","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","modifiers","enableRadialLabels","slicesLabelsSkipAngle","motionStiffness","motionDamping","event","handleClick","background","State","dataRegion","setDataRegion","info","assign","subregion","flag","dataByRegion","values","reduce","acc","re","State_region","SlideBtn","InfoBtn","MapBtn","SlideMenu","OBJECTID","code","Map","infected","alpha3Code","nivo_geo_esm","mapFeature","domain","unknownColor","valueFormat","projectionType","projectionScale","projectionRotation","enableGraticule","graticuleLineColor","legends","anchor","direction","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","Slide","openMenu","setOpenMenu","openMap","setOpenMap","components_Slide_map","slideMenu","slideBtn","mapBtn","infoBtn","Modal","content","onOk","Footer","Layout","Content","App","dispatch","useDispatch","asyncToGenerator","regenerator_default","mark","_callee","tmpTotal","tmpData","wrap","_context","prev","next","sent","Last_Update","t0","stop","_x","apply","arguments","_callee2","_context2","zhCountryName","detail","alpha2Code","_x2","components_Slide","components_Info","components_State","Country","globalIncrease_GlobalIncrease","href","initState","reducer","undefined","action","objectSpread2","composeEnhancer","compose","applyMiddleware","thunk","window","devToolsExtension","f","store","createStore","rootElement","document","getElementById","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.06935b9f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { Statistic, Row, Col } from \"antd\";\r\n\r\nexport default class globalStatic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    return (\r\n      <div>\r\n        <Row type=\"flex\" justify=\"space-between\" className=\"text-align-center\">\r\n          <Col span={8}>\r\n            <Statistic title=\"確診人數\" value={data.confirmedCount} />\r\n          </Col>\r\n          <Col span={8}>\r\n            <Statistic title=\"治癒人數\" value={data.curedCount} />\r\n          </Col>\r\n          <Col span={8}>\r\n            <Statistic title=\"死亡人數\" value={data.deadCount} />\r\n          </Col>\r\n          <Col span={8} offset={16}>\r\n            <div\r\n              className=\"update-time\"\r\n              style={{ marginTop: \"10px\", textAlign: \"center\" }}\r\n            >\r\n              更新時間：{dayjs(data.updateTime).format(\"YYYY/MM/DD HH:MM\")}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport axios from \"axios\";\r\nimport _ from \"loadsh\";\r\nimport { List, Spin, Icon } from \"antd\";\r\nimport { tify } from \"chinese-conv\";\r\n\r\nimport GlobalStatic from \"./globalStatic\";\r\n\r\nimport \"./globalInfo.scss\";\r\n\r\nconst Info = () => {\r\n  const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n  const totalData = useSelector(state => state.totalData);\r\n  const [virusInfo, setVirusInfo] = useState([]);\r\n\r\n  const getVirusInfo = () =>{\r\n    axios\r\n      .get(\"https://lab.isaaclin.cn/nCoV/api/overall\")\r\n      .then(res => {\r\n        const data = res.data.results[0];\r\n        let note = [];\r\n        if (!_.isEmpty(data)) {\r\n          for (let i = 0; i < 3; i++) {\r\n            note.push(data[`remark${i + 1}`]);\r\n          }\r\n          for (let i = 0; i < 3; i++) {\r\n            note.push(data[`note${i + 1}`]);\r\n          }\r\n        }\r\n        setVirusInfo(note);\r\n      })\r\n      .catch(err => console.log(\"info err\"));\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getVirusInfo();\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStatic data={totalData} />\r\n      {virusInfo.length > 0 ? (\r\n        <List\r\n          style={{ marginTop: \"10px\" }}\r\n          size=\"small\"\r\n          header={<div>Note</div>}\r\n          bordered\r\n          dataSource={virusInfo}\r\n          renderItem={(item, i) => (\r\n            <List.Item key={i}>{tify(item)}</List.Item>\r\n          )}\r\n        />\r\n      ) : (\r\n          <div className=\"loading\">\r\n            <Spin indicator={antIcon} />\r\n          </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\n\r\nconst CountryChart = props => {\r\n  const data = useSelector(state => state.countryInfected);\r\n  const countryName = useSelector(state => state.countryInfo);\r\n  if(!data || !countryName) return (<div>There is no Data!</div>)\r\n  const withoutChina = data.filter(\r\n    el => { \r\n      return el.Country_Region !== \"China\" && el.Confirmed!==0\r\n    }\r\n  );\r\n  const mapTitle = {\r\n    Confirmed: \"確診人數\",\r\n    Recovered: \"治癒人數\",\r\n    Deaths: \"死亡人數\"\r\n  };\r\n  const keys = [\"Confirmed\", \"Recovered\", \"Deaths\"];\r\n  const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\r\n\r\n  return (\r\n      <div>\r\n        <h3 className=\"h3-title\">各國人數狀態</h3>\r\n        <div style={{ height: \"2000px\" }}>\r\n          <ResponsiveBar\r\n            layout=\"horizontal\"\r\n            data={withoutChina}\r\n            keys={keys}\r\n            indexBy=\"Country_Region\"\r\n            margin={{ top: 5, right: 10, bottom: 50, left: 65 }}\r\n            padding={0.3}\r\n            colors={colors}\r\n            axisLeft={{\r\n              format: v =>\r\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\r\n            }}\r\n            axisBottom={{\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: \"人數\",\r\n              legendPosition: \"middle\",\r\n              legendOffset: 40\r\n            }}\r\n            animate={true}\r\n            labelSkipWidth={16}\r\n            labelSkipHeight={16}\r\n            enableLabel={false}\r\n            tooltip={({ id, value }) => (\r\n              <span>\r\n                {mapTitle[id]}: {value}\r\n              </span>\r\n            )}\r\n          />\r\n        </div>\r\n        <div style={{ height: \"85px\" }}>\r\n          <ResponsiveBar\r\n            layout=\"horizontal\"\r\n            data={data.filter(el => el.Country_Region === \"China\")}\r\n            keys={keys}\r\n            indexBy=\"Country_Region\"\r\n            margin={{ top: 5, right: 10, bottom: 50, left: 65 }}\r\n            padding={0.3}\r\n            colors={colors}\r\n            axisTop={null}\r\n            axisLeft={{\r\n              format: v =>\r\n                `${(countryName.find(el => el.key === v) || {}).zh || v}`\r\n            }}\r\n            axisBottom={{\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: \"人數\",\r\n              legendPosition: \"middle\",\r\n              legendOffset: 40\r\n            }}\r\n            animate={true}\r\n            labelSkipWidth={16}\r\n            labelSkipHeight={16}\r\n            enableLabel={false}\r\n            tooltip={({ id, value }) => (\r\n              <span>\r\n                {mapTitle[id]}: {value}\r\n              </span>\r\n            )}\r\n          />\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          {keys.map((el, i) => (\r\n            <div key={i} className=\"legend-wrapper\">\r\n              <div className=\"legend\" style={{ backgroundColor: colors[i] }} />\r\n              <span>{mapTitle[el]}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <small>*各國疫情人數持續增加，因此有些國家增加數量過大，會導致較少感染人數的國家圖表顯示不出來。</small>\r\n          <small>另外中國與其他國家人數差異過大，獨立為一圖表。</small>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default CountryChart;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { DatePicker } from \"antd\";\r\nimport \"./globalIncrease.scss\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class GlobalIncrease extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      everydayTotal: [], //累積總數\r\n      everydayCount: [], //每日人數\r\n      chartData: [],\r\n      tmpChartData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/cases_time_v3/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Report_Date_String%20asc&resultOffset=0&resultRecordCount=2000&cacheHint=true\"\r\n      )\r\n      .then(res => {\r\n        const everydayTotal = res.data.features.map(el => {\r\n          return {\r\n            x: el.attributes.Report_Date_String,\r\n            y: el.attributes.Total_Confirmed\r\n          };\r\n        });\r\n        const everydayCount = everydayTotal.map((el, i) => {\r\n          let tmpCount = el.y;\r\n          if (i !== 0) {\r\n            tmpCount -= everydayTotal[i - 1].y;\r\n          }\r\n          return {\r\n            x: el.x,\r\n            y: tmpCount\r\n          };\r\n        });\r\n        this.setState({\r\n          everydayTotal: everydayTotal,\r\n          everydayCount: everydayCount\r\n        });\r\n        this.makeChartData();\r\n        this.setState({ tmpChartData: this.state.chartData });\r\n      });\r\n  }\r\n  makeChartData(data1, data2) {\r\n    const data = [\r\n      {\r\n        id: \"每日確診人數\",\r\n        data: data1 || this.state.everydayCount\r\n      },\r\n      {\r\n        id: \"累積總數\",\r\n        data: data2 || this.state.everydayTotal\r\n      }\r\n    ];\r\n    this.setState({ chartData: data });\r\n  }\r\n\r\n  dateOnChange(date, chart) {\r\n    if (date[0] === \"\" && date[1] === \"\") {\r\n      this.makeChartData();\r\n    } else {\r\n      let range = [];\r\n      date.forEach((el, i) => {\r\n        range[i] = chart[0].data.findIndex(e => e.x === el);\r\n      });\r\n      const count = chart[0].data.slice(range[0], range[1] + 1);\r\n      const total = chart[1].data.slice(range[0], range[1] + 1);\r\n      this.makeChartData(count, total);\r\n    }\r\n  }\r\n\r\n  disableDate(current) {\r\n    return (\r\n      current &&\r\n      (current.valueOf() > Date.now() ||\r\n        current.valueOf() < new Date(\"2020/01/20\"))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const colors = [\"#E2C2A4\", \"#7ECABC\", \"#E47C67\"];\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ height: \"500px\" }}>\r\n          <h3 className=\"h3-title\">每日/累積確診人數</h3>\r\n          <div className=\"date-range\">\r\n            <span>查詢區間：</span>\r\n            <RangePicker\r\n              onChange={(date, dateString) =>\r\n                this.dateOnChange(dateString, this.state.tmpChartData)\r\n              }\r\n              disabledDate={this.disableDate}\r\n              format=\"YYYY/MM/DD\"\r\n            />\r\n          </div>\r\n\r\n          <ResponsiveLine\r\n            data={this.state.chartData}\r\n            margin={{ top: 5, right: 5, bottom: 50, left: 65 }}\r\n            xScale={{ type: \"point\" }}\r\n            yScale={{ type: \"linear\" }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n              format: v => `${v.replace(/[0-9]{4}\\//g, \"\")}`,\r\n              tickRotation: -45\r\n            }}\r\n            axisLeft={{\r\n              orient: \"left\",\r\n              tickRotation: 0,\r\n              legend: \"人數\",\r\n              legendOffset: -60,\r\n              legendPosition: \"middle\"\r\n            }}\r\n            colors={colors}\r\n            pointSize={10}\r\n            pointColor={{ theme: \"background\" }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: \"serieColor\" }}\r\n            useMesh={true}\r\n            enableSlices=\"x\"\r\n          />\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            {this.state.chartData.map((el, i) => (\r\n              <div key={i} className=\"legend-wrapper\">\r\n                <div\r\n                  className=\"legend\"\r\n                  style={{ backgroundColor: colors[i] }}\r\n                />\r\n                <span>{el.id}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\n\r\nconst EachRegion = (props) => {\r\n  const mapType = [\"Confirmed\", \"Recovered\", \"Deaths\"];\r\n  const mapTitle = {\r\n    Confirmed: \"確診人數\",\r\n    Recovered: \"治癒人數\",\r\n    Deaths: \"死亡人數\"\r\n  }\r\n  props.data.country.sort((a, b) => b[mapType[props.data.index]] - a[mapType[props.data.index]])\r\n  \r\n  return (\r\n    <div>\r\n      <h3 style={{textAlign: \"center\"}}>{props.data.label}<br/>{mapTitle[mapType[props.data.index]]}</h3>\r\n      <div style={{ height: \"500px\", display: \"flex\" }}>\r\n        <ResponsiveBar\r\n          data={props.data.country}\r\n          keys={[mapType[props.data.index]]}\r\n          indexBy=\"Country_Region\"\r\n          margin={{ top: 15, right: 10, bottom: 70, left: 65 }}\r\n          padding={props.data.country.length> 20 ?0.3 :0.7}\r\n          colors={{ scheme: \"nivo\"}}\r\n          axisBottom={{\r\n            format: v => `${(props.data.country.find(el => el.key === v) || {}).zh || v}`,\r\n            tickRotation: -40\r\n          }}\r\n          axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            legend: \"人數\",\r\n            legendPosition: \"start\",\r\n            legendOffset: -55\r\n          }}\r\n          animate={true}\r\n          labelSkipWidth={16}\r\n          labelSkipHeight={16}\r\n          enableLabel={false}\r\n          tooltip={({ id, value }) => (\r\n            <span>\r\n              {value}\r\n            </span>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EachRegion;","import React, { useEffect, useState } from 'react';\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport './region.scss';\r\n\r\nimport EachRegion from \"./eachRegion\"\r\n\r\nconst Region = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [chartSwitch, setChartSwitch] = useState(false);\r\n  const [clickData, setClickData] = useState(null);\r\n\r\n  const mapTitle = [\"確診人數\", \"治癒人數\", \"死亡人數\"];\r\n  const regionTitle = {\r\n    Asia: \"亞洲\",\r\n    Europe: \"歐洲\",\r\n    Other: \"其他\",\r\n    Americas: \"美洲\",\r\n    Oceania: \"大洋洲\",\r\n    Africa: \"非洲\"\r\n  }\r\n  const nivoColor = [\"rgb(232, 193, 160)\", \"rgb(244, 117, 96)\", \"rgb(241, 225, 91)\", \"rgb(232, 168, 56)\", \"rgb(97, 205, 187)\", \"rgb(151, 227, 213)\"]\r\n\r\n  useEffect(() => {\r\n    let tmp = [[], [], []]\r\n    props.data.forEach(el => {\r\n      tmp[0].push({ id: el.region, value: el.Confirmed, label: regionTitle[el.region], country: el. confirmedDetail });\r\n      tmp[1].push({ id: el.region, value: el.Recovered, label: regionTitle[el.region], country: el.recoveredDetail });\r\n      tmp[2].push({ id: el.region, value: el.Deaths, label: regionTitle[el.region], country: el.deathsDetail });\r\n    })\r\n    setData(tmp);\r\n  }, [props.data])\r\n\r\n  function handleClick(data, i) {\r\n    if(data.value==0) return false;\r\n    setChartSwitch(true);\r\n    data.index = i;\r\n    setClickData(data);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!chartSwitch ?\r\n        <div>\r\n          <h3 className=\"h3-title\" style={{marginBottom: \"20px\"}}>五大洲圓餅圖</h3>\r\n          <div className=\"pie-wrapper\">\r\n            {!chartSwitch &&\r\n              data.map((el, index) => {\r\n                return (\r\n                  <div className=\"pie\" key={index}>\r\n                    <h3 className=\"title\">{mapTitle[index]}</h3>\r\n                    <ResponsivePie\r\n                      data={el}\r\n                      margin={{ top: 5, right: 10, bottom: 60, left: 10 }}\r\n                      innerRadius={0.3}\r\n                      padAngle={3}\r\n                      cornerRadius={2}\r\n                      colors={nivoColor}\r\n                      borderWidth={1}\r\n                      borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\r\n                      enableRadialLabels={false}\r\n                      slicesLabelsSkipAngle={10}\r\n                      motionStiffness={90}\r\n                      motionDamping={15}\r\n                      tooltip={function (e) { return <div >{e.label} : {e.value}</div> }}\r\n                      onClick={(data, event) => handleClick(data,index)}\r\n                    />\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n          <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n            {data.length != 0 &&\r\n              data[0].map((el, index) => {\r\n                return (\r\n                  <div key={index} className=\"pie-labels-wrapper\">\r\n                    <span className=\"pie-labels\" style={{ background: nivoColor[index] }}></span>\r\n                    {el.label}\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div> :\r\n        <div>\r\n          <div style={{ textDecoration: \"underline\", color: \"cornflowerblue\", cursor: \"pointer\"}} onClick={() => { setChartSwitch(false); setClickData(null) }}>返回</div>\r\n          <EachRegion data={clickData}/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Region;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Region from \"./region\"\r\n\r\nconst State = () => {\r\n  const countryInfected = useSelector(state=>state.countryInfected);\r\n  const countryName = useSelector(state => state.countryInfo);\r\n  const [dataRegion, setDataRegion] = useState([])\r\n\r\n  useEffect(()=>{\r\n    if(!countryName || !countryInfected) return ()=>{};\r\n    const data = countryInfected.map(el=>{\r\n      let info = countryName.find(e=>e.key === el.Country_Region );\r\n      if(info){\r\n        return Object.assign(el,info);\r\n      }else{\r\n        el.region = 'Other';\r\n        el.subregion = 'Other';\r\n        el.flag = null;\r\n        return el;\r\n      }\r\n    })\r\n    const dataByRegion = Object.values(data.reduce((acc, re)=>{\r\n      if(acc[re.region]){\r\n        acc[re.region]['Confirmed'] += re.Confirmed;\r\n        acc[re.region]['confirmedDetail'].push(re)\r\n        acc[re.region]['Deaths'] += re.Deaths;\r\n        acc[re.region]['deathsDetail'].push(re)\r\n        acc[re.region]['Recovered'] += re.Recovered;\r\n        acc[re.region]['recoveredDetail'].push(re)\r\n      }else{\r\n        acc[re.region] = {\r\n          region: re.region,\r\n          Confirmed: re.Confirmed,\r\n          Deaths: re.Deaths,\r\n          Recovered: re.Recovered,\r\n          confirmedDetail: [],\r\n          deathsDetail:[],\r\n          recoveredDetail: []\r\n        };\r\n        acc[re.region].confirmedDetail.push(re);\r\n        acc[re.region].deathsDetail.push(re);\r\n        acc[re.region].recoveredDetail.push(re);\r\n      }\r\n      return acc;\r\n    },{}))\r\n    setDataRegion(dataByRegion);\r\n  }, [countryInfected, countryName])\r\n\r\n  return (\r\n    <div style={{marginTop: \"30px\"}}>\r\n      {dataRegion &&\r\n        <Region data={dataRegion} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default State;","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\n\r\nconst SlideBtn = (props)=>{\r\n  return (\r\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\r\n      <Icon type=\"project\" theme=\"filled\" />\r\n    </div>\r\n  ); \r\n}\r\nexport default SlideBtn;\r\n\r\n","import React from 'react';\r\nimport { Icon } from \"antd\";\r\n\r\nconst InfoBtn = props =>{\r\n  return (\r\n    <div className=\"slide-btn\" onClick={()=> props.onClick()}>\r\n      <Icon type=\"info\"/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default InfoBtn;","import React from 'react';\r\nimport { Icon } from \"antd\";\r\n\r\nconst MapBtn = props => {\r\n  return (\r\n    <div className=\"slide-btn\" onClick={() => props.onClick()}>\r\n      <Icon type=\"global\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MapBtn;","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col } from \"antd\";\r\n\r\nconst SlideMenu = ()=>{\r\n  const countryInfected = useSelector(state => state.countryInfected);\r\n\r\n  return (\r\n    <div className=\"slide-menu\">\r\n      <h3>數據表</h3>\r\n      <Row className=\"row-title\" type=\"flex\" justify=\"space-between\">\r\n        <Col span={6}>國家</Col>\r\n        <Col className=\"col\" span={4}>\r\n          確診\r\n          </Col>\r\n        <Col className=\"col\" span={4}>\r\n          治癒\r\n          </Col>\r\n        <Col className=\"col\" span={4}>\r\n          死亡\r\n          </Col>\r\n      </Row>\r\n      {countryInfected.map(el => {\r\n        return (\r\n          <Row\r\n            className=\"row\"\r\n            key={el.OBJECTID}\r\n            type=\"flex\"\r\n            justify=\"space-between\"\r\n            style={el.code==='TW' ? {color: \"darkred\"}: {}}\r\n          >\r\n            <Col span={6}>\r\n              {el.zh || el.Country_Region }\r\n            </Col>\r\n            <Col className=\"col\" span={4}>\r\n              {el.Confirmed}\r\n            </Col>\r\n            <Col className=\"col\" span={4}>\r\n              {el.Recovered}\r\n            </Col>\r\n            <Col className=\"col\" span={4}>\r\n              {el.Deaths}\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SlideMenu;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\"\r\nimport { ResponsiveChoropleth } from '@nivo/geo'\r\n\r\nimport mapFeature from \"../../config/map.json\"\r\n\r\nimport './map.scss';\r\n\r\nconst Map = (props)=> {\r\n  const infected = useSelector(state=>state.countryInfected);\r\n  const [data, setData] = useState([]);\r\n  useEffect(()=>{\r\n    const tmp = infected.map(el=>{\r\n      return {\r\n        id: el.alpha3Code,\r\n        value: el.Confirmed,\r\n        zh: el.zh\r\n      }\r\n    })\r\n    setData(tmp);\r\n  }, [infected])\r\n  return (\r\n    <div className=\"map-wrapper\">\r\n      <div className=\"close-btn\" onClick={()=>props.onClick()}>Close</div>\r\n      {/* <h3 className=\"h3-title\">確診人數世界地圖</h3> */}\r\n      <ResponsiveChoropleth\r\n        data={data}\r\n        features={mapFeature.features}\r\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n        colors=\"nivo\"\r\n        domain={[0, 90000]}\r\n        unknownColor=\"#c7c7c7\"\r\n        label=\"data.zh\"\r\n        valueFormat=\",.1r\"\r\n        projectionType=\"equirectangular\"\r\n        projectionScale={155}\r\n        projectionRotation={[0, 0, 0]}\r\n        enableGraticule={true}\r\n        graticuleLineColor=\"#dddddd\"\r\n        borderWidth={0.5}\r\n        borderColor=\"#152538\"\r\n        legends={[\r\n          {\r\n            anchor: 'bottom-left',\r\n            direction: 'column',\r\n            justify: true,\r\n            translateX: 200,\r\n            translateY: -120,\r\n            itemsSpacing: 0,\r\n            itemWidth: 110,\r\n            itemHeight: 18,\r\n            itemDirection: 'left-to-right',\r\n            itemTextColor: '#ffffff',\r\n            itemOpacity: 0.95,\r\n            symbolSize: 18,\r\n          }\r\n        ]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map;","import React, { useState } from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nimport SlideBtn from \"./slideBtn\";\r\nimport InfoBtn from \"./infoBtn\";\r\nimport MapBtn from \"./mapBtn\";\r\nimport SlideMenu from \"./slideMenu\";\r\nimport Map from \"./map\";\r\nimport \"./slide.scss\";\r\n\r\nconst Slide = () => {\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const [openMap, setOpenMap] = useState(false);\r\n\r\n  function InfoModal() {\r\n    Modal.info({\r\n      title: \"About This Website\",\r\n      content: (\r\n        <div>\r\n          <p>這是一個react的練習專案，API是從下方的資料來源所寫的網站內找出來的，我不確定這樣的合法性，但我僅是練習，並無任何商業用途。</p>\r\n        </div>\r\n      ),\r\n      onOk() { },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {openMap && <Map onClick={()=>setOpenMap(false)}/>}\r\n      <div className={\"slide-wrapper \" + (openMenu ? \"active\" : \"\")}>\r\n        {openMenu && <SlideMenu />}\r\n        <div>\r\n          <SlideBtn onClick={() => setOpenMenu(!openMenu)} />\r\n          <MapBtn onClick={()=> setOpenMap(!openMap)}/>\r\n          <InfoBtn onClick={InfoModal}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slide;\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Layout } from \"antd\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCountryVirusData, getCountryInfo } from \"./action\"\r\n\r\nimport \"./styles.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport Info from \"./components/Info\";\r\nimport Country from \"./components/Country\";\r\nimport GlobalIncrease from \"./components/globalIncrease\";\r\nimport State from \"./components/State\";\r\nimport Slide from \"./components/Slide/\";\r\nconst { Footer, Content } = Layout;\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() =>{\r\n    dispatch(getCountryVirusData())\r\n    dispatch(getCountryInfo())\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Content style={{ marginTop: \"20px\" }}>\r\n          <Slide />\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Col span={21}>\r\n              <h2 className=\"text-align-center\">新型冠狀病毒 2019-nCoV</h2>\r\n              <Info />\r\n              <State />\r\n              <Country />\r\n              <GlobalIncrease />\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n        <Footer style={{ marginTop: \"100px\" }}>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            資料來源：\r\n            <a href=\"https://github.com/BlankerL/DXY-2019-nCoV-Crawler\">\r\n              DXY-2019-nCoV-Crawler\r\n            </a>\r\n            / <a href=\"https://www.gisaid.org/\">GISAID</a>\r\n          </div>\r\n        </Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\nimport zhCountryName from '../config/countryName.json';\r\n\r\nexport const getCountryVirusData = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&outSR=102100&resultOffset=0&resultRecordCount=250&cacheHint=true')\r\n    let tmpTotal = {\r\n      confirmedCount: 0,\r\n      curedCount: 0,\r\n      deadCount: 0,\r\n      updateTime: 0\r\n    };\r\n    const tmpData = res.data.features.map(el => {\r\n      tmpTotal.confirmedCount += el.attributes.Confirmed;\r\n      tmpTotal.curedCount += el.attributes.Recovered;\r\n      tmpTotal.deadCount += el.attributes.Deaths;\r\n      tmpTotal.updateTime =\r\n        el.attributes.Last_Update > tmpTotal.updateTime\r\n          ? el.attributes.Last_Update\r\n          : tmpTotal.updateTime;\r\n      return el.attributes;\r\n    });\r\n    dispatch({\r\n      type: \"ADD_COUNTRY_INFECTED\",\r\n      data: tmpData\r\n    });\r\n    dispatch({\r\n      type: \"ADD_TOTAL_DATA\",\r\n      data: tmpTotal,\r\n    })\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n};\r\n\r\nexport const getCountryInfo = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('https://restcountries.eu/rest/v2/all');\r\n    const tmp = zhCountryName.map(el => {\r\n      let detail = res.data.find(e => e.alpha2Code === el.code);\r\n      if (detail) {\r\n        const { region, flag, subregion, alpha3Code } = detail;\r\n        return Object.assign(el, { region, flag, subregion, alpha3Code })\r\n      } else {\r\n        el.region = 'Other';\r\n        el.flag = null;\r\n        el.subregion = 'Other';\r\n        return el;\r\n      }\r\n    })\r\n    dispatch({\r\n      type: \"ADD_COUNTRY_INFO\",\r\n      data: tmp\r\n    })\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}","const initState = {\r\n  countryInfected: null,\r\n  totalData: {},\r\n  countryInfo: null,\r\n};\r\n\r\nexport default initState;","import initState from '../store'\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_COUNTRY_INFECTED': {\r\n      return {\r\n        ...state,\r\n        countryInfected: action.data,\r\n      };\r\n    }\r\n    case 'ADD_TOTAL_DATA': {\r\n      return {\r\n        ...state,\r\n        totalData: action.data,\r\n      };\r\n    }\r\n    case 'ADD_COUNTRY_INFO': {\r\n      return {\r\n        ...state,\r\n        countryInfo: action.data,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { compose ,createStore, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from './reducer';\r\nconst composeEnhancer = compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f);\r\n\r\nconst store = createStore(reducer, composeEnhancer);\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, rootElement);\r\n"],"sourceRoot":""}